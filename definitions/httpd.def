APP_FULL_NAME="Apache Httpd server"
APP_NAME="httpd"
APP_SHA="00f5c3f8274139bd6160eda2cf514fa9b74549e5"
APP_VERSION="2.4.10"
APP_HTTP_PATH="${MAIN_SOURCE_REPOSITORY}${APP_NAME}-${APP_VERSION}.tar.bz2"
APP_REQUIREMENTS="libiconv zlib pcre perl openssl libxml2 apr apr-util curl"
APP_CONFIGURE_ARGS="--with-z=${PREFIX} --with-crypto --enable-nonportable-atomics=yes --with-ssl=${PREFIX} --with-pcre=${PREFIX} --with-apr=${PREFIX} --with-mpm=worker --with-sslport=443 --with-port=80 --enable-ssl --enable-proxy --enable-proxy-connect --enable-proxy-express --enable-deflate --enable-proxy-balancer --enable-session --enable-session-cookie --enable-heartbeat --enable-heartmonitor --enable-negotiation --enable-rewrite --enable-userdir --enable-vhost-alias --enable-proxy-wstunnel --enable-proxy-fcgi --enable-unique-id --enable-expires --enable-mime-magic --enable-request --enable-include --enable-data --enable-buffer --enable-ratelimit --enable-watchdog --enable-cache --enable-cache-disk --enable-auth-form --enable-auth-digest --enable-pie --enable-load-all-modules --enable-exception-hook --enable-suexec --with-suexec-userdir=public_html --with-suexec-uidmin=500 --with-suexec-gidmin=100 --with-suexec-docroot=/"
if [ "${SYSTEM_NAME}" = "FreeBSD" ]; then
    APP_CONFIGURE_ARGS="${APP_CONFIGURE_ARGS} --with-suexec-caller=worker --with-suexec-logfile=${SOFTWARE_DATA_DIR}/.logs/httpd-suexec.log --with-suexec-safepath='${PREFIX}/bin:/usr/bin:/bin'"
else
    APP_CONFIGURE_ARGS="${APP_CONFIGURE_ARGS} --with-suexec-caller=apache --with-suexec-logfile=/var/log/httpd/suexec.log --with-suexec-safepath='${PREFIX}/bin:/usr/local/bin:/usr/bin:/bin'"
fi
APP_EXPORTS="httpd htdigest fcgistarter apr-1-config apu-1-config htpasswd apachectl ab htcacheclean fcgistarter suexec enc2xs apxs suexec"
APP_CONFLICTS_WITH="Nginx"
APP_AFTER_INSTALL_CALLBACK="build_addons_and_extensions"

build_limitipconn () {
    MOD_NAME="mod_limitipconn"
    MOD_VERSION="0.24"
    ${FETCH_BIN} "${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.bz2"
    ${TAR_BIN} xf "${MOD_NAME}-${MOD_VERSION}.tar.bz2"
    cd "${MOD_NAME}-${MOD_VERSION}"
    PATH=${PREFIX}/bin:/bin:/usr/bin make install
    test "$?" = "0" || error "Failed to install mod_limitipconn"
}

build_fcgid () {
    MOD_NAME="mod_fcgid"
    MOD_VERSION="2.3.9"
    ${FETCH_BIN} "${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz"
    ${TAR_BIN} xf "${MOD_NAME}-${MOD_VERSION}.tar.gz"
    cd "${MOD_NAME}-${MOD_VERSION}"
    PATH=${PREFIX}/bin:/bin:/usr/bin ./configure.apxs
    test "$?" = "0" || error "Failed to configure mod_fcgid"
    PATH=${PREFIX}/bin:/bin:/usr/bin make install
    test "$?" = "0" || error "Failed to install mod_fcgid"
}

build_useragent2 () {
    MOD_NAME="mod_auth_useragent2"
    MOD_VERSION="0.9.1"
    ${FETCH_BIN} "${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz"
    ${TAR_BIN} xf "${MOD_NAME}-${MOD_VERSION}.tar.gz"
    cd "${MOD_NAME}-${MOD_VERSION}"
    PATH=${PREFIX}/bin:/bin:/usr/bin apxs -cia mod_auth_useragent2.c
    test "$?" = "0" || error "Failed to install mod_useragent2"
}

build_security () {
    MOD_NAME="modsecurity"
    MOD_VERSION="2.8.0"
    ${FETCH_BIN} "${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz"
    ${TAR_BIN} xf "${MOD_NAME}-${MOD_VERSION}.tar.gz"
    cd "${MOD_NAME}-${MOD_VERSION}"
    PATH=${PREFIX}/bin:/bin:/usr/bin ./configure --with-libxml="${PREFIX}" --with-apxs="${PREFIX}/bin/apxs" --with-pcre="${PREFIX}" --with-apr="${PREFIX}" --with-apu="${PREFIX}" --with-curl="${PREFIX}"
    test "$?" = "0" || error "Failed to configure mod_security"
    PATH=${PREFIX}/bin:/bin:/usr/bin make install
}

build_evasive () {
    MOD_NAME="mod_evasive"
    MOD_VERSION="1.10.1"
    ${FETCH_BIN} "${MAIN_SOURCE_REPOSITORY}${MOD_NAME}_${MOD_VERSION}_apache_2.4.tar.gz"
    ${TAR_BIN} xf "${MOD_NAME}_${MOD_VERSION}_apache_2.4.tar.gz"
    cd "${MOD_NAME}"
    PATH=${PREFIX}/bin:/bin:/usr/bin apxs -cia mod_evasive24.c
    test "$?" = "0" || error "Failed to install mod_evasive"
}

build_addons_and_extensions () {
    note "Installing additional modules"
    build_limitipconn
    build_fcgid
    build_useragent2
    build_security
    build_evasive
    note "Done building modules"
}
