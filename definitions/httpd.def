DEF_FULL_NAME="Apache Web Server - Httpd (2.4.x)"
DEF_STANDALONE=YES
DEF_NAME="httpd"
DEF_VERSION="2.4.52"
DEF_SHA="6df2f9b30e89526f73449e4e1aa22450ff088408"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.bz2"
DEF_ORIGIN="http://ftp.ps.pl/pub/apache//${DEF_NAME}/${DEF_NAME}-${DEF_VERSION}.tar.bz2"
DEF_REQUIREMENTS="zlib libxml2 libunistring expat libedit libevent lzo lz4 pcre db perl-static gdbm openssl nghttp2 apr apr-util lua53 curl-dynamic"
DEF_CONFIGURE_ARGS="--with-z=${PREFIX} --with-ssl=${PREFIX} --with-pcre=${PREFIX} --with-apr=${PREFIX} --with-apr-util=${PREFIX} --with-gdbm=${PREFIX} --with-berkeley-db=${PREFIX} --with-libxml2=${PREFIX} --with-lua=${PREFIX} --with-curl=${PREFIX} --with-nghttp2=${PREFIX} --with-mpm=worker --enable-mpms-shared=all --enable-filter --enable-ext-filter --enable-modules=all --enable-mods-static=all --enable-load-all-modules --enable-http --enable-http2 --enable-proxy-http2 --enable-unixd --enable-xml2enc --with-sslport=443 --with-port=80 --enable-ssl --enable-proxy --enable-proxy-connect --enable-proxy-wstunnel --enable-proxy-fcgi --enable-proxy-express --enable-deflate --enable-session --disable-sed --enable-session-cookie --enable-crypto --enable-session-crypto --enable-slotmem-shm --disable-slotmem-plain --enable-heartbeat --enable-heartmonitor --enable-negotiation --enable-rewrite --enable-userdir --enable-vhost-alias --enable-unique-id --enable-expires --enable-mime-magic --enable-request --enable-include --enable-data --enable-buffer --enable-ratelimit --enable-watchdog --disable-example-hooks --enable-cache --enable-cache-disk --enable-authn-file --enable-auth-form --enable-auth-digest --disable-authz-core --disable-authnz-ldap --disable-auth-basic --enable-pie --enable-exception-hook --enable-suexec --with-suexec-userdir=public_html --with-suexec-uidmin=500 --with-suexec-gidmin=100 --with-suexec-docroot=/ --enable-logio --disable-proxy-balancer --disable-ldap --disable-md --disable-dav --disable-dav-lock --enable-lua --enable-nonportable-atomics=yes"

case "${SYSTEM_NAME}" in
    Linux)
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --with-suexec-caller=apache --with-suexec-logfile=${SERVICE_DIR}/logs/suexec.log --with-suexec-safepath='${PREFIX}/bin:/usr/local/bin:/usr/bin:/bin' --sysconfdir=/etc/${DEF_NAME}/conf"
        ;;

    *)
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --with-suexec-caller=worker --with-suexec-logfile=${SERVICE_DIR}/logs/${DEF_NAME}-suexec.log --with-suexec-safepath='${PREFIX}/bin:/usr/bin:/bin:${SERVICE_DIR}/bin'"
        ;;
esac

DEF_EXPORTS="${DEF_NAME} htdigest httxt2dbm htdbm fcgistarter htpasswd apachectl ab htcacheclean enc2xs apxs suexec logresolve dbmmanage rotatelogs h2ph h2xs a2p"
DEF_USELESS="lib/cmake man manual share logs lib/lua docs include lib/*.{a,la}"
DEF_USEFUL="bin/perl* bin/*sed bin/ap[[:alpha:]]-1-config bin/curl*"
# DEF_LINKER_FLAGS="-Wl,-rpath=${PREFIX}/lib,--enable-new-dtags"
unset DEF_USE_LTO

DEF_AFTER_INSTALL_METHOD="build_addons_and_extensions"
build_addons_and_extensions () {
    note "Installing additional modules" && \
    build_limitipconn && \
    build_fcgid && \
    build_useragent2 && \
    build_security && \
    build_evasive && \
    note "Done building modules"
    try "${MKDIR_BIN} -p ${SERVICE_DIR}/logs"
}

build_limitipconn () {
    MOD_NAME="mod_limitipconn"
    MOD_VERSION="0.24"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.bz2 ${FETCH_OPTS}"
    try "${TAR_BIN} xf ${MOD_NAME}-${MOD_VERSION}.tar.bz2" && \
    cd "${MOD_NAME}-${MOD_VERSION}" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin make install" && \
    note "Installed: mod_limitipconn" && \
    return 0
}

build_fcgid () {
    MOD_NAME="mod_fcgid"
    MOD_VERSION="2.3.9"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz ${FETCH_OPTS}"
    try "${TAR_BIN} xf ${MOD_NAME}-${MOD_VERSION}.tar.gz" && \
    cd "${MOD_NAME}-${MOD_VERSION}" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin ./configure.apxs" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin make install" && \
    note "Installed: mod_fcgid" && \
    return 0
}

build_useragent2 () {
    MOD_NAME="mod_auth_useragent2"
    MOD_VERSION="0.9.1"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz ${FETCH_OPTS}"
    try "${TAR_BIN} xf ${MOD_NAME}-${MOD_VERSION}.tar.gz" && \
    cd "${MOD_NAME}-${MOD_VERSION}" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin apxs -cia mod_auth_useragent2.c" && \
    note "Installed: mod_useragent2" && \
    return 0
}

build_security () {
    MOD_NAME="modsecurity"
    MOD_VERSION="2.9.1"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${MOD_NAME}-${MOD_VERSION}.tar.gz ${FETCH_OPTS}"
    try "${TAR_BIN} xf ${MOD_NAME}-${MOD_VERSION}.tar.gz" && \
    cd "${MOD_NAME}-${MOD_VERSION}" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin ./configure --prefix=${PREFIX} --with-libxml=${PREFIX} --with-apxs=${PREFIX}/bin/apxs --with-pcre=${PREFIX} --with-apr=${PREFIX} --with-apu=${PREFIX} --with-curl=${PREFIX} --enable-htaccess-config" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin make install" && \
    note "Installed: mod_security" && \
    return 0
}

build_evasive () {
    MOD_NAME="mod_evasive"
    MOD_VERSION="1.10.1"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${MOD_NAME}_${MOD_VERSION}_apache_2.4.tar.gz" ${FETCH_OPTS}
    try "${TAR_BIN} xf ${MOD_NAME}_${MOD_VERSION}_apache_2.4.tar.gz" && \
    cd "${MOD_NAME}" && \
    try "PATH=${PREFIX}/bin:/bin:/usr/bin apxs -cia mod_evasive24.c" && \
    note "Installed: mod_evasive" && \
    return 0
}
