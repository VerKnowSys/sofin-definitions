DEF_FULL_NAME="Influxb database"
DEF_NAME="influxdb"
DEF_SOURCE_PATH="git://github.com/OliverLetterer/dummy-repo.git"
DEF_VERSION="0.10.0"
DEF_GIT_CHECKOUT="v${DEF_VERSION}"
DEF_STANDALONE=YES
DEF_REQUIREMENTS="pkgconf pcre go15 protobuf"
DEF_CONFIGURE_METHOD="ignore"
DEF_MAKE_METHOD="make_action"
DEF_INSTALL_METHOD="strip_and_install_links"
DEF_USELESS="doc test include share src local/src misc pkg api etc man lib/python* AUTHORS CONTRIBUTING.md CONTRIBUTORS LICENSE PATENTS README.md VERSION favicon.ico robots.txt"
DEF_EXPORTS="influx influx_stress influxd inspect test_client urlgen"

make_action () {
    srcdir="$(${PWD_BIN} 2>/dev/null)"
    influxdb_git_repo="https://github.com/influxdata/influxdb.git"
    export PATH=${PATH}:/Software/Git/exports
    export GOPATH=${PREFIX}/local
    debug "Cleaning GOPATH: ${GOPATH}"
    ${RM_BIN} -rf "${GOPATH}"
    ${MKDIR_BIN} -p ${GOPATH}/src/github.com/influxdata
    cd $GOPATH/src/github.com/influxdata && \
    debug "Cloning ${influxdb_git_repo}" && \
    ${GIT_BIN} clone ${influxdb_git_repo} && \
    cd $GOPATH/src/github.com/influxdata/influxdb && \
    debug "Checking out branch: v${DEF_VERSION}" && \
    ${GIT_BIN} checkout -b "v${DEF_VERSION}" && \
    debug "Getting ${DEF_NAME}" && \
    ${PREFIX}/bin/go get -v -t ./... && \
    debug "Building ${DEF_NAME}" && \
    ${PREFIX}/bin/go clean ./... && \
    debug "Installing ${DEF_NAME}" && \
    ${PREFIX}/bin/go install ./... && \
    debug "Done."
}

strip_and_install_links () {
    debug "Stripping binaries from local prefix"
    for afile in $(${FIND_BIN} "${PREFIX}/local/bin" -type f); do
        debug "Stripping file: ${afile}: $(${STRIP_BIN} ${afile})"
    done
    for binary in influx influx_stress influxd inspect test_client urlgen; do
        ${LN_BIN} -s ${PREFIX}/local/bin/${binary} ${PREFIX}/bin/${binary}
    done
}
