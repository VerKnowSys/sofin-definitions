DEF_NAME="node"
DEF_VERSION="v8.9.4"
DEF_FULL_NAME="Node.js ${DEF_VERSION} LTS (VerKnowSys build)"
DEF_SHA="919434a79ea64c9bfaa9db6747c5f7d4065dc90c"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.gz"
DEF_ORIGIN="http://nodejs.org/download/"
DEF_REQUIREMENTS="pkgconf make libtool c-ares zlib lzo lz4 m4 expat pcre readline perl zip bison gmp mpfr libmpc isl binutils-gold gcc libffi openssl python27 nghttp2 icu libuv"
DEF_CONFIGURE_ARGS="--without-dtrace --tag=VerKnowSys \
--shared-openssl --shared-openssl-libpath=${PREFIX} --openssl-use-def-ca-store \
--shared-cares --shared-cares-libpath=${PREFIX} \
--shared-nghttp2 --shared-nghttp2-libpath=${PREFIX} \
--shared-zlib --shared-zlib-libpath=${PREFIX} \
--shared-libuv --shared-libuv-libpath=${PREFIX} \
--without-etw --without-perfctr --without-snapshot \
--with-intl=system-icu --without-inspector \
"
DEF_CONFLICTS_WITH="Node"
DEF_USEFUL="bin/npm* bin/yar*"
DEF_EXPORTS="node npm yarn yarnpkg"
DEF_STRIP=LIB

# NOTE: override Sofin compiler setup:
unset DEF_COMPILER_FLAGS DEF_LINKER_FLAGS CFLAGS CXXFLAGS LDFLAGS

CFLAGS="-Wl,-rpath=${PREFIX}/lib,--enable-new-dtags -I${PREFIX}/include -I/usr/include -fPIE -fuse-ld=gold"
CXXFLAGS="${CFLAGS}" #  -stdlib=libc++
LDFLAGS="-L${PREFIX}/lib -L/usr/lib -fPIE"

CC="ccache gcc -w -O2 -fpermissive ${CFLAGS}"
CXX="ccache g++ -w -O2 -fpermissive ${CFLAGS}"
CPP="c++"
LINK="g++ -lc++ -Wl,-rpath=${PREFIX}/lib,--enable-new-dtags ${LDFLAGS}"
LD="${LINK}"

DEF_AFTER_CONFIGURE_METHOD="after_config"
after_config () {
    ${SED_BIN} "s#/usr/local#${PREFIX}#g" deps/v8/src/v8.gyp

    # yes, I know it's wrong ;) but Node is wrong and nobody cares :P
    ${INSTALL_BIN} -v "/usr/lib/libc++.so" "${PREFIX}/lib/libstdc++.so"
}
DEF_MAKE_METHOD="env CC.host=\"${CC}\" CXX.host=\"${CXX}\" LINK.host=\"${LINK}\" LINK.target=\"${LINK}\" make ${MAKE_OPTS}"
DEF_INSTALL_METHOD="env CC.host=\"${CC}\" CXX.host=\"${CXX}\" LINK.host=\"${LINK}\" LINK.target=\"${LINK}\" make ${MAKE_OPTS} install"
DEF_AFTER_INSTALL_METHOD="after_install"
after_install () {
    try "${PREFIX}/bin/npm install --global yarn"
}
