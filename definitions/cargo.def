inherit rustc

DEF_FULL_NAME="Cargo - Rust crate manager"
DEF_NAME="cargo"
DEF_GIT_MODE=YES
DEF_VERSION="0.13.0"
DEF_SOURCE_PATH="https://github.com/rust-lang/cargo.git"
DEF_REQUIREMENTS="${DEF_REQUIREMENTS} rustc"
DEF_CONFIGURE_ARGS="--local-rust-root=${PREFIX} --enable-optimize"
DEF_MAKE_METHOD="make_method"
DEF_INSTALL_METHOD="make_method install"
make_method () {
    RUSTFLAGS="${DEFAULT_RUSTFLAGS}" NO_REBUILD=1 VERBOSE=1 RUST_BACKTRACE=1 make -j${CPUS} ${@}
}
DEF_AFTER_INSTALL_METHOD="make_wrapper ; install_utils"
make_wrapper () {
    # make wrapper for cargo which does not include rpath information in binary:
    if [ "Darwin" = "${SYSTEM_NAME}" ]; then
        _addon="DY"
    fi
    ${MV_BIN} -v ${PREFIX}/bin/cargo ${PREFIX}/bin/cargo.bin && \
        ${PRINTF_BIN} "#\!/bin/sh\n${ENV_BIN} ${_addon}LD_LIBRARY_PATH=${PREFIX}/lib RUST_BACKTRACE=${RUST_BACKTRACE:-1} RUSTFLAGS=\"${RUSTFLAGS:-${DEFAULT_RUSTFLAGS}}\" CARGO_INSTALL_ROOT=\"${CARGO_INSTALL_ROOT:-${PREFIX}}\" ${PREFIX}/bin/cargo.bin \${@}\n" > "${PREFIX}/bin/cargo" && \
            ${CHMOD_BIN} -v 755 "${PREFIX}/bin/cargo" && \
                note "Cargo wrapper of prefix: $(distn "${PREFIX}") is ready" >> "${LOG}-${DEF_NAME}"
    unset _addon
    ${TEST_BIN} -x "${PREFIX}/bin/cargo"
}
install_utils () {
    for crate in cargo-count cargo-do cargo-check cargo-modules cargo-watch cargo-fmt rustfmt; do
        note "Installing crate: ${crate}"
        ${PREFIX}/bin/cargo install --root ${PREFIX} ${crate}
    done
}
