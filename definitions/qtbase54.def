APP_FULL_NAME="Qt 5.4 Base Library"
APP_NAME="qtbase54"
APP_SHA="134ec03371722cc31e2041a82c255cec708ca848"
APP_VERSION="5.4.1"
APP_HTTP_PATH="${MAIN_SOURCE_REPOSITORY}qtbase-opensource-src-${APP_VERSION}.tar.xz"
APP_CONFIGURE_ARGS="-prefix ${PREFIX} -no-pch -c++11 -opensource -confirm-license -release -shared -no-sql-sqlite -no-xcb -nomake examples -nomake tests -L${PREFIX}/lib -no-qpa-platform-guard -continue"
APP_EXPORTS="moc lconvert lrelease lupdate qdoc3 qmake rcc uic qtpaths qtdiag qdoc macdeployqt macchangeqt qlalr qcollectiongenerator qhelpconverter qhelpgenerator qlalr qml1plugindump qmlbundle qmlimportscanner qmlmin qmlplugindump qmlprofiler qmlscene qmltestrunner"
APP_CONFLICTS_WITH="Qt Qt53 Qtws53"

if [ "${SYSTEM_NAME}" = "FreeBSD" ]; then
    hack_gcc_and_clang_for_qt_if_root_on_fbsd () {
        if [ "$(/bin/realpath /usr/bin/gcc)" != "/usr/bin/clang" ]; then
            ${RM_BIN} -f /tmp/gcc.tmp /tmp/g++.tmp
            ${MV_BIN} -v /usr/bin/gcc /tmp/gcc.tmp
            ${MV_BIN} -v /usr/bin/g++ /tmp/g++.tmp
            ${LN_BIN} -s /usr/bin/clang /usr/bin/gcc
            ${LN_BIN} -s /usr/bin/clang++ /usr/bin/g++
        fi
    }

    unhack_gcc_and_clang_for_qt_if_root_on_fbsd () {
        # add freebsd-clang spec:
        if [ ! -d "${PREFIX}/mkspecs/freebsd-clang" ]; then
            ${MKDIR_BIN} -p ${PREFIX}/mkspecs/freebsd-clang
            cd ${PREFIX}/mkspecs/freebsd-clang/
            ${CP_BIN} ../freebsd-g++46/* ./
            ${SED_BIN} -i '' -e 's/gcc46/clang/g' qmake.conf
            ${SED_BIN} -i '' -e 's/g++46/clang++/g' qmake.conf
            ${SED_BIN} -i '' -e 's/-pthread/-pthread -lc++/g' qmake.conf
        fi

        if [ "$(/bin/realpath /usr/bin/gcc)" = "/usr/bin/clang" ]; then
            ${RM_BIN} -v /usr/bin/gcc /usr/bin/g++
            ${MV_BIN} -v /tmp/gcc.tmp /usr/bin/gcc
            ${MV_BIN} -v /tmp/g++.tmp /usr/bin/g++
        fi
    }
    APP_AFTER_UNPACK_CALLBACK="hack_gcc_and_clang_for_qt_if_root_on_fbsd"
    APP_AFTER_INSTALL_CALLBACK="unhack_gcc_and_clang_for_qt_if_root_on_fbsd"
fi

if [ "${SYSTEM_NAME}" = "Darwin" ]; then
    makeSymlinks () {
        for lib in QtCore QtGui QtWidgets QtOpenGL; do
            ln -s "../lib/${lib}.framework/Headers" "${PREFIX}/include/${lib}"
        done
    }
    APP_AFTER_INSTALL_CALLBACK="makeSymlinks"
fi
