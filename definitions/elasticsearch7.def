DEF_FULL_NAME="Elasticsearch 7"
DEF_STANDALONE=YES
DEF_NAME="elasticsearch"
DEF_VERSION="7.12.1"
DEF_SHA="39a571161d698c6b41ba7edb1b786c2c223b60ce"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-no-jdk-linux-x86_64.tar.gz"
DEF_ORIGIN="https://artifacts.elastic.co/downloads/${DEF_NAME}/${DEF_NAME}-${DEF_VERSION}-no-jdk-linux-x86_64.tar.gz"
DEF_CONFIGURE_METHOD="binary"
DEF_AFTER_UNPACK_METHOD="${CP_BIN} -fR ${BUILD_DIR}/${DEF_NAME}-${DEF_VERSION}/ ${PREFIX}"
DEF_REQUIREMENTS="@openjdk8 bash"
DEF_USELESS="bin/*.bat bin/*.exe demo sample samples src.zip THIRD_PARTY_* COPYING include NOTICE.txt ASSEMBLY_EXCEPTION README.textile"
DEF_USEFUL="bin/java bin/jar bin/bash bin/elastic*"
DEF_EXPORTS="elasticsearch elasticsearch-certgen elasticsearch-certutil elasticsearch-cli elasticsearch-croneval elasticsearch-env elasticsearch-keystore elasticsearch-migrate elasticsearch-plugin elasticsearch-saml-metadata elasticsearch-setup-passwords elasticsearch-shard elasticsearch-sql-cli elasticsearch-syskeygen elasticsearch-translog elasticsearch-users x-pack-env x-pack-security-env x-pack-watcher-env"
DEF_AFTER_INSTALL_METHOD="prepare_and_link_service_dirs && patch_script"
case "${SYSTEM_NAME}" in
    Darwin)
        DEF_USER_INFO="Be sure to install latest OpenJDK 8+ from: https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"
        ;;
esac

prepare_and_link_service_dirs () {
    debug "${0}: prepare_and_link_service_dirs(): Running initial service dir preparation"
    mkdir -p "${PREFIX}/data" "${PREFIX}/logs"
    if [ ! -L "${PREFIX}/data" ]; then
        try "${MV_BIN} '${PREFIX}/data' '${SERVICE_DIR}/data'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/data' '${PREFIX}/data'"
    fi
    if [ ! -L "${PREFIX}/plugins" ]; then
        try "${MV_BIN} '${PREFIX}/plugins' '${SERVICE_DIR}/plugins'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/plugins' '${PREFIX}/plugins'"
    fi
    if [ ! -L "${PREFIX}/logs" ]; then
        try "${MV_BIN} '${PREFIX}/logs' '${SERVICE_DIR}/logs'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/logs' '${PREFIX}/logs'"
    fi
    if [ ! -L "${PREFIX}/conf" ]; then
        try "${MV_BIN} '${PREFIX}/conf' '${SERVICE_DIR}/conf'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/conf' '${PREFIX}/conf'"
    fi
    if [ ! -L "${PREFIX}/config" ]; then
        try "${MV_BIN} '${PREFIX}/config' '${SERVICE_DIR}/config'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/config' '${PREFIX}/config'"
    fi
    if [ ! -L "${PREFIX}/modules" ]; then
        try "${MV_BIN} '${PREFIX}/modules' '${SERVICE_DIR}/modules'" \
        && try "${LN_BIN} -s '${SERVICE_DIR}/modules' '${PREFIX}/modules'"
    fi
}

patch_script () {
    # patch sheebang:
    for _exp_scrpt in $(to_iter "${DEF_EXPORTS}"); do
        case "${SYSTEM_NAME}" in
            FreeBSD)
                ${SED_BIN} -i '' -e \
                    "s#/bin/bash#${PREFIX}/bin/bash#g;  s#\"\`dirname \"\$0\"\`\"#${PREFIX}/bin#g;" \
                    "${PREFIX}/bin/${_exp_scrpt}"
                ;;
        esac
    done

    # patch environment file:
    case "${SYSTEM_NAME}" in
        Darwin)
            _jdk18_java_home="$(${FIND_BIN} /Library/Java/JavaVirtualMachines/ -name 'jdk1.8.0_*' -type d -maxdepth 1 -mindepth 1 2>/dev/null | ${HEAD_BIN} -n1 2>/dev/null)/Contents/Home"
            if [ -z "${_jdk18_java_home}" ]; then
                error "No JDK 8+ directory found under: $(diste "/Library/Java/JavaVirtualMachines/jdk1.8.0_*")"
            fi
            ${SED_BIN} -i '' -e \
                "s#ES_HOME=.*\$#JAVA_HOME=${_jdk18_java_home}; ES_HOME=${PREFIX}#g;  s#while \[ \".*\$#while false; do#g;" \
                    "${PREFIX}/bin/elasticsearch-env"
            ;;

        FreeBSD)
            ${SED_BIN} -i '' -e \
                "s#ES_HOME=.*\$#JAVA_HOME=${PREFIX}; ES_HOME=${PREFIX}#g;  s#while \[ \".*\$#while false; do#g;" \
                    "${PREFIX}/bin/elasticsearch-env"
            ;;
    esac

    # patch jvm options file:
    ${SED_BIN} -i '' -e \
        "s#-Xms1g#-Xms4g#g;  s#-Xmx1g#-Xmx4g#g;" \
            "${SERVICE_DIR}/config/jvm.options"
}

DEF_NO_MPROTECT=YES
DEF_NO_PAGEEXEC=YES
DEF_APPLY_LOWER_SECURITY_ON="java javac javap jar"

# NOTE: You may need to add "xpack.ml.enabled: false" to elasticsearch.yml, to avoid ES incompetence by leaving mainstream system unsupported.

