DEF_FULL_NAME="Wireguard Tools"
DEF_STANDALONE=YES
DEF_NAME="wireguard-tools"
DEF_VERSION="1.0.20200820"
DEF_SHA="d7cb2eea8e8dcfa9279210d026bc0208aa909e2e"
DEF_ORIGIN="https://git.zx2c4.com/${DEF_NAME}/snapshot/${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_CONFIGURE_METHOD="no-conf"
DEF_BUILD_DIR_SUFFIX="src/"
DEF_REQUIREMENTS="bash go"
DEF_USEFUL="bin/bash"
DEF_EXPORTS="wg wg-quick wireguard-go"
DEF_NO_CCACHE=YES

DEF_AFTER_UNPACK_METHOD="patch_makefile"
patch_makefile () {
    ${SED_BIN} -i '' -e "s|^PREFIX.*\$|PREFIX=${PREFIX}|" Makefile
    ${SED_BIN} -i '' -e "s|RUNSTATEDIR \"/wireguard/\"|\"${SERVICE_DIR}/\"|" ipc.c ipc-uapi-unix.h
}

DEF_AFTER_MAKE_METHOD="make_wireguard_go"
make_wireguard_go () {
    _name="wireguard-go-0.0.20200320"
    _last="${_name}.tar.xz"
    fetch "https://git.zx2c4.com/wireguard-go/snapshot/${_last}"
    ${TAR_BIN} xf "${_last}"
    cd "${_name}"
    ${SED_BIN} -i '' -e "s|var socketDirectory.*\$|var socketDirectory = \"${SERVICE_DIR}/\"|" ipc/uapi_linux.go ipc/uapi_bsd.go
    export PATH=${PATH}:/Software/Git/exports && make && ${INSTALL_BIN} wireguard-go ${PREFIX}/bin/wireguard-go
}

DEF_AFTER_INSTALL_METHOD="install_wg_quick"
install_wg_quick () {
    debug "Patching wg-quickâ€¦"
    ${SED_BIN} -i '' -e "s|^CONFIG_SEARCH_PATHS.*\$|CONFIG_SEARCH_PATHS=${SERVICE_DIR}|; s|/usr/local/bin/bash|${PREFIX}/bin/bash|" wg-quick/*.bash
    ${SED_BIN} -i '' -e "s|/var/run/wireguard|${SERVICE_DIR}|g" wg-quick/*.bash

    case "${SYSTEM_NAME}" in
        FreeBSD)
            ${INSTALL_BIN} -v wg-quick/freebsd.bash "${PREFIX}/bin/wg-quick"
            ;;

        OpenBSD)
            ${INSTALL_BIN} -v wg-quick/openbsd.bash "${PREFIX}/bin/wg-quick"
            ;;

        Darwin)
            ${INSTALL_BIN} -v wg-quick/darwin.bash "${PREFIX}/bin/wg-quick"
            ;;

        Linux)
            ${INSTALL_BIN} -v wg-quick/linux.bash "${PREFIX}/bin/wg-quick"
            ;;
    esac
}
