DEF_NAME="curl"
DEF_VERSION="7.83.1"
DEF_SHA="4adc266ba0901a3f244b54260cf1ee391fea479a"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_ORIGIN="https://curl.haxx.se/download/${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_REQUIREMENTS="jemalloc pcre2 libunistring libressl-lib lzo @zstd libffi libxml2 libidn2 nghttp2 brotli"
DEF_CONFIGURE_METHOD="cmake"
DEF_CONFIGURE_ARGS="-DBUILD_SHARED_LIBS=ON -DCURL_LTO=ON -DCURL_ZLIB=ON -DCURL_ZSTD=ON -DCURL_BROTLI=ON -DUSE_NGHTTP2=ON -DUSE_LIBIDN2=ON -DBUILD_TESTING=OFF -DCURL_CA_BUNDLE=${SERVICE_DIR}/etc/ssl/cert.pem"
DEF_EXPORTS="${DEF_NAME} ${DEF_NAME}-config"
DEF_USELESS="man share lib/*.{a,la,sh} lib/cmake include lib/pkgconfig sbin"
DEF_STANDALONE=YES
DEF_USE_SAFE_STACK=YES

case "${SYSTEM_NAME}-${SYSTEM_VERSION}" in
    FreeBSD-11*|FreeBSD-12*)
        unset DEF_USE_LTO
        ;;
esac

DEF_AFTER_INSTALL_METHOD="fetch_and_install_fresh_ca_cert"
fetch_and_install_fresh_ca_cert () {
    mkdir -p "${SERVICE_DIR}/etc/ssl"

    try "${MKDIR_BIN} -p ${SERVICE_DIR}/etc/ssl; ${RM_BIN} -vf ${SERVICE_DIR}/etc/ssl/cert.pem" \
        && note "Removed old CA cert: $(distn "${SERVICE_DIR}/etc/ssl/cert.pem")"

    try "${FETCH_BIN} -o ${SERVICE_DIR}/etc/ssl/cert.pem ${FETCH_OPTS} ${DEF_DEFAULT_CA_CERT_SOURCE}" \
        && note "Fetched most recent CA certs from: $(distn "${DEF_DEFAULT_CA_CERT_SOURCE}")" \
        && return 0

    try "${FETCH_BIN} -o ${SERVICE_DIR}/etc/ssl/cert.pem ${FETCH_OPTS} ${DEF_DEFAULT_CA_CERT_SOURCE_ALT}" \
        && note "Fetched cached CA certs from: $(distn "${DEF_DEFAULT_CA_CERT_SOURCE_ALT}")" \
        && return 0
}
