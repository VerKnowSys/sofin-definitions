DEF_NAME="curl"
DEF_VERSION="7.64.1"
DEF_SHA="a7242098aebf31107bd4765f3d54456953dba141"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_ORIGIN="https://curl.haxx.se/download/${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_REQUIREMENTS="pkgconf jemalloc pcre icu libunistring perl openssl lzo libffi libxml2 libidn2 python27 nghttp2 libssh2"
DEF_CONFIGURE_ARGS="--with-ca-bundle=${SERVICE_DIR}/etc/ssl/cert.pem --with-libidn2=${PREFIX} --with-nghttp2=${PREFIX} --with-libssh2=${PREFIX} --without-gnutls --disable-ldap --disable-ldaps --disable-debug"
DEF_EXPORTS="${DEF_NAME} ${DEF_NAME}-config"
DEF_USELESS="man lib/*python* lib/*perl* include/*python* share/man share/texinfo share/info share/aclocal* lib/*.a lib/cmake include lib/pkgconfig"
DEF_INSTALL_METHOD="make -s install"
DEF_STANDALONE=YES
DEF_USE_SAFE_STACK=YES
unset DEF_USE_LTO

DEF_AFTER_INSTALL_METHOD="fetch_and_install_fresh_ca_cert"
fetch_and_install_fresh_ca_cert () {
    mkdir -p "${SERVICE_DIR}/etc/ssl"

    try "${MKDIR_BIN} -p ${SERVICE_DIR}/etc/ssl; ${RM_BIN} -vf ${SERVICE_DIR}/etc/ssl/cert.pem" \
        && note "Removed old CA cert: $(distn "${SERVICE_DIR}/etc/ssl/cert.pem")"

    try "${FETCH_BIN} -o ${SERVICE_DIR}/etc/ssl/cert.pem ${FETCH_OPTS} ${DEF_DEFAULT_CA_CERT_SOURCE}" \
        && note "Fetched most recent CA certs from: $(distn "${DEF_DEFAULT_CA_CERT_SOURCE}")" \
        && return 0

    try "${FETCH_BIN} -o ${SERVICE_DIR}/etc/ssl/cert.pem ${FETCH_OPTS} ${DEF_DEFAULT_CA_CERT_SOURCE_ALT}" \
        && note "Fetched cached CA certs from: $(distn "${DEF_DEFAULT_CA_CERT_SOURCE_ALT}")" \
        && return 0
}
