diff --git OTP_VERSION OTP_VERSION
index 3d5ab6e..d1ac72d 100644
--- OTP_VERSION
+++ OTP_VERSION
@@ -1 +1 @@
-18.0.2
+18.0.3
diff --git erts/doc/src/notes.xml erts/doc/src/notes.xml
index ab62916..bed1ac4 100644
--- erts/doc/src/notes.xml
+++ erts/doc/src/notes.xml
@@ -31,6 +31,29 @@
   </header>
   <p>This document describes the changes made to the ERTS application.</p>
 
+<section><title>Erts 7.0.3</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    Fixed a binary memory leak when printing to shell using
+	    the tty driver (i.e. not -oldshell).</p>
+          <p>
+	    Own Id: OTP-12941</p>
+        </item>
+        <item>
+          <p>
+	    Fix a bug where the standard error port sometimes crashes
+	    with eagain as the reason.</p>
+          <p>
+	    Own Id: OTP-12942</p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
 <section><title>Erts 7.0.2</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
diff --git erts/emulator/drivers/unix/ttsl_drv.c erts/emulator/drivers/unix/ttsl_drv.c
index 0f773b6..53146e7 100644
--- erts/emulator/drivers/unix/ttsl_drv.c
+++ erts/emulator/drivers/unix/ttsl_drv.c
@@ -720,6 +720,7 @@ static void ttysl_from_erlang(ErlDrvData ttysl_data, char* buf, ErlDrvSizeT coun
     }
 
     driver_enq_bin(ttysl_port,putcbuf,0,putcpos);
+    driver_free_binary(putcbuf);
 
     if (sz == 0) {
         for (;;) {
@@ -1207,6 +1208,7 @@ static int outc(int c)
     putcbuf->orig_bytes[putcpos++] = c;
     if (putcpos == putclen) {
         driver_enq_bin(ttysl_port,putcbuf,0,putclen);
+        driver_free_binary(putcbuf);
         putcpos = 0;
         putclen = TTY_BUFFSIZE;
         putcbuf = driver_alloc_binary(BUFSIZ);
diff --git erts/emulator/sys/unix/sys.c erts/emulator/sys/unix/sys.c
index b036b20..8d7da3e 100644
--- erts/emulator/sys/unix/sys.c
+++ erts/emulator/sys/unix/sys.c
@@ -2527,7 +2527,7 @@ fd_async(void *async_data)
     SysIOVec      *iov0;
     SysIOVec      *iov;
     int            iovlen;
-    int            err;
+    int            err = 0;
     /* much of this code is stolen from efile_drv:invoke_writev */
     driver_pdl_lock(dd->blocking->pdl);
     iov0 = driver_peekq(dd->port_num, &iovlen);
@@ -2542,8 +2542,11 @@ fd_async(void *async_data)
         memcpy(iov,iov0,iovlen*sizeof(SysIOVec));
         driver_pdl_unlock(dd->blocking->pdl);
 
-        res = writev(dd->ofd, iov, iovlen);
-        err = errno;
+        do {
+            res = writev(dd->ofd, iov, iovlen);
+        } while (res < 0 && errno == EINTR);
+        if (res < 0)
+            err = errno;
 
         erts_free(ERTS_ALC_T_SYS_WRITE_BUF, iov);
     }
@@ -2582,7 +2585,12 @@ void fd_ready_async(ErlDrvData drv_data,
             return /* 0; */;
         }
     } else if (dd->blocking->res < 0) {
-        driver_failure_posix(port_num, dd->blocking->err);
+        if (dd->blocking->err == ERRNO_BLOCK) {
+            set_busy_port(port_num, 1);
+            /* still data left to write in queue */
+            driver_async(port_num, &dd->blocking->pkey, fd_async, dd, NULL);
+        } else
+            driver_failure_posix(port_num, dd->blocking->err);
         return; /* -1; */
     }
     return; /* 0; */
diff --git erts/vsn.mk erts/vsn.mk
index 478f581..38b9a13 100644
--- erts/vsn.mk
+++ erts/vsn.mk
@@ -18,7 +18,7 @@
 # %CopyrightEnd%
 # 
 
-VSN = 7.0.2
+VSN = 7.0.3
 
 # Port number 4365 in 4.2
 # Port number 4366 in 4.3
diff --git lib/kernel/test/standard_error_SUITE.erl lib/kernel/test/standard_error_SUITE.erl
index e8917bb..97ead9b 100644
--- lib/kernel/test/standard_error_SUITE.erl
+++ lib/kernel/test/standard_error_SUITE.erl
@@ -21,13 +21,13 @@
 -module(standard_error_SUITE).
 
 -export([all/0,suite/0]).
--export([badarg/1,getopts/1]).
+-export([badarg/1,getopts/1,output/1]).
 
 suite() ->
     [{ct_hooks,[ts_install_cth]}].
 
 all() -> 
-    [badarg,getopts].
+    [badarg,getopts,output].
 
 badarg(Config) when is_list(Config) ->
     {'EXIT',{badarg,_}} = (catch io:put_chars(standard_error, [oops])),
@@ -37,3 +37,30 @@ badarg(Config) when is_list(Config) ->
 getopts(Config) when is_list(Config) ->
     [{encoding,latin1}] = io:getopts(standard_error),
     ok.
+
+%% Test that writing a lot of output to standard_error does not cause the
+%% processes handling it to terminate like this:
+%%
+%%    =ERROR REPORT==== 9-Aug-2015::23:19:23 ===
+%%    ** Generic server standard_error_sup terminating
+%%    ** Last message in was {'EXIT',<0.28.0>,eagain}
+%%    ** When Server state == {state,standard_error,undefined,<0.28.0>,
+%%                                   {local,standard_error_sup}}
+%%    ** Reason for termination ==
+%%    ** eagain
+%%
+%% This problem, observed with Erlang 18.0.2, was fixed in fd_driver by
+%% properly handling EAGAIN if it arises on file descriptor writes.
+%%
+output(Config) when is_list(Config) ->
+    Ref = monitor(process, standard_error_sup),
+    Chars = [ [["1234567890" || _ <- lists:seq(1,10)], $\s,
+               integer_to_list(L), $\r, $\n] || L <- lists:seq(1, 100) ],
+    ok = io:put_chars(standard_error, Chars),
+    receive
+        {'DOWN', Ref, process, _, _} ->
+            error(standard_error_noproc)
+    after
+        500 ->
+            ok
+    end.
diff --git otp_versions.table otp_versions.table
index c9c0bc4..23f00fd 100644
--- otp_versions.table
+++ otp_versions.table
@@ -1,3 +1,4 @@
+OTP-18.0.3 : erts-7.0.3 # asn1-4.0 common_test-1.11 compiler-6.0 cosEvent-2.2 cosEventDomain-1.2 cosFileTransfer-1.2 cosNotification-1.2 cosProperty-1.2 cosTime-1.2 cosTransactions-1.3 crypto-3.6 debugger-4.1 dialyzer-2.8 diameter-1.10 edoc-0.7.17 eldap-1.2 erl_docgen-0.4 erl_interface-3.8 et-1.5.1 eunit-2.2.10 gs-1.6 hipe-3.12 ic-4.4 inets-6.0 jinterface-1.6 kernel-4.0 megaco-3.18 mnesia-4.13 observer-2.1 odbc-2.11 orber-3.8 os_mon-2.4 ose-1.1 otp_mibs-1.1 parsetools-2.1 percept-0.8.11 public_key-1.0 reltool-0.7 runtime_tools-1.9.1 sasl-2.5 snmp-5.2 ssh-4.0 ssl-7.0 stdlib-2.5 syntax_tools-1.7 test_server-3.9 tools-2.8 typer-0.9.9 webtool-0.9 wx-1.4 xmerl-1.3.8 :
 OTP-18.0.2 : erts-7.0.2 runtime_tools-1.9.1 # asn1-4.0 common_test-1.11 compiler-6.0 cosEvent-2.2 cosEventDomain-1.2 cosFileTransfer-1.2 cosNotification-1.2 cosProperty-1.2 cosTime-1.2 cosTransactions-1.3 crypto-3.6 debugger-4.1 dialyzer-2.8 diameter-1.10 edoc-0.7.17 eldap-1.2 erl_docgen-0.4 erl_interface-3.8 et-1.5.1 eunit-2.2.10 gs-1.6 hipe-3.12 ic-4.4 inets-6.0 jinterface-1.6 kernel-4.0 megaco-3.18 mnesia-4.13 observer-2.1 odbc-2.11 orber-3.8 os_mon-2.4 ose-1.1 otp_mibs-1.1 parsetools-2.1 percept-0.8.11 public_key-1.0 reltool-0.7 sasl-2.5 snmp-5.2 ssh-4.0 ssl-7.0 stdlib-2.5 syntax_tools-1.7 test_server-3.9 tools-2.8 typer-0.9.9 webtool-0.9 wx-1.4 xmerl-1.3.8 :
 OTP-18.0.1 : erts-7.0.1 # asn1-4.0 common_test-1.11 compiler-6.0 cosEvent-2.2 cosEventDomain-1.2 cosFileTransfer-1.2 cosNotification-1.2 cosProperty-1.2 cosTime-1.2 cosTransactions-1.3 crypto-3.6 debugger-4.1 dialyzer-2.8 diameter-1.10 edoc-0.7.17 eldap-1.2 erl_docgen-0.4 erl_interface-3.8 et-1.5.1 eunit-2.2.10 gs-1.6 hipe-3.12 ic-4.4 inets-6.0 jinterface-1.6 kernel-4.0 megaco-3.18 mnesia-4.13 observer-2.1 odbc-2.11 orber-3.8 os_mon-2.4 ose-1.1 otp_mibs-1.1 parsetools-2.1 percept-0.8.11 public_key-1.0 reltool-0.7 runtime_tools-1.9 sasl-2.5 snmp-5.2 ssh-4.0 ssl-7.0 stdlib-2.5 syntax_tools-1.7 test_server-3.9 tools-2.8 typer-0.9.9 webtool-0.9 wx-1.4 xmerl-1.3.8 :
 OTP-18.0 : asn1-4.0 common_test-1.11 compiler-6.0 cosEvent-2.2 cosEventDomain-1.2 cosFileTransfer-1.2 cosNotification-1.2 cosProperty-1.2 cosTime-1.2 cosTransactions-1.3 crypto-3.6 debugger-4.1 dialyzer-2.8 diameter-1.10 edoc-0.7.17 eldap-1.2 erl_docgen-0.4 erl_interface-3.8 erts-7.0 et-1.5.1 eunit-2.2.10 gs-1.6 hipe-3.12 ic-4.4 inets-6.0 jinterface-1.6 kernel-4.0 megaco-3.18 mnesia-4.13 observer-2.1 odbc-2.11 orber-3.8 os_mon-2.4 ose-1.1 otp_mibs-1.1 parsetools-2.1 percept-0.8.11 public_key-1.0 reltool-0.7 runtime_tools-1.9 sasl-2.5 snmp-5.2 ssh-4.0 ssl-7.0 stdlib-2.5 syntax_tools-1.7 test_server-3.9 tools-2.8 typer-0.9.9 webtool-0.9 wx-1.4 xmerl-1.3.8 # :
