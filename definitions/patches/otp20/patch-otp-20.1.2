diff --git OTP_VERSION OTP_VERSION
index 2a0e5e0a15..a9d0c61447 100644
--- OTP_VERSION
+++ OTP_VERSION
@@ -1 +1 @@
-20.1.1
+20.1.2
diff --git erts/doc/src/notes.xml erts/doc/src/notes.xml
index fa200176e4..14103cca28 100644
--- erts/doc/src/notes.xml
+++ erts/doc/src/notes.xml
@@ -31,6 +31,23 @@
   </header>
   <p>This document describes the changes made to the ERTS application.</p>
 
+<section><title>Erts 9.1.2</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    Fixed bug that could cause a VM crash when a corrupt
+	    message is received on distribution channel from other
+	    node.</p>
+          <p>
+	    Own Id: OTP-14661 Aux Id: ERIERL-80 </p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
 <section><title>Erts 9.1.1</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
diff --git erts/emulator/beam/erl_message.c erts/emulator/beam/erl_message.c
index c1af70592a..b30c4a49d7 100644
--- erts/emulator/beam/erl_message.c
+++ erts/emulator/beam/erl_message.c
@@ -568,14 +568,11 @@ erts_msg_attached_data_size_aux(ErtsMessage *msg)
 
     sz = erts_decode_dist_ext_size(msg->data.dist_ext);
     if (sz < 0) {
-	/* Bad external; remove it */
-	if (is_not_nil(ERL_MESSAGE_TOKEN(msg))) {
-	    ErlHeapFragment *heap_frag;
-	    heap_frag = erts_dist_ext_trailer(msg->data.dist_ext);
-	    erts_cleanup_offheap(&heap_frag->off_heap);
-	}
-	erts_free_dist_ext_copy(msg->data.dist_ext);
-	msg->data.dist_ext = NULL;
+	/* Bad external
+	 * We leave the message intact in this case as it's not worth the trouble
+	 * to make all callers remove it from queue. It will be detected again
+	 * and removed from message queue later anyway.
+	 */
 	return 0;
     }
 
diff --git erts/emulator/test/distribution_SUITE.erl erts/emulator/test/distribution_SUITE.erl
index b4ec99f902..4a0b299e03 100644
--- erts/emulator/test/distribution_SUITE.erl
+++ erts/emulator/test/distribution_SUITE.erl
@@ -56,6 +56,7 @@
          bad_dist_ext_process_info/1,
          bad_dist_ext_control/1,
          bad_dist_ext_connection_id/1,
+         bad_dist_ext_size/1,
 	 start_epmd_false/1, epmd_module/1]).
 
 %% Internal exports.
@@ -92,6 +93,7 @@ groups() ->
       [dist_auto_connect_never, dist_auto_connect_once]},
      {bad_dist_ext, [],
       [bad_dist_ext_receive, bad_dist_ext_process_info,
+       bad_dist_ext_size,
        bad_dist_ext_control, bad_dist_ext_connection_id]}].
 
 %% Tests pinging a node in different ways.
@@ -1672,6 +1674,57 @@ bad_dist_ext_connection_id(Config) when is_list(Config) ->
     stop_node(Offender),
     stop_node(Victim).
 
+%% OTP-14661: Bad message is discovered by erts_msg_attached_data_size
+bad_dist_ext_size(Config) when is_list(Config) ->
+    {ok, Offender} = start_node(bad_dist_ext_process_info_offender),
+    %%Prog = "Prog=/home/uabseri/src/otp_new3/bin/cerl -rr -debug",
+    Prog = [],
+    {ok, Victim} = start_node(bad_dist_ext_process_info_victim, [], Prog),
+    start_node_monitors([Offender,Victim]),
+
+    Parent = self(),
+    P = spawn_link(Victim,
+                   fun () ->
+                           Parent ! {self(), started},
+                           receive check_msgs -> ok end,  %% DID CRASH HERE
+                           bad_dist_ext_check_msgs([one]),
+                           Parent ! {self(), messages_checked}
+                   end),
+
+    receive {P, started} -> ok end,
+    P ! one,
+
+    Suspended = make_ref(),
+    S = spawn(Victim,
+              fun () ->
+                      erlang:suspend_process(P),
+                      Parent ! Suspended,
+                      receive after infinity -> ok end
+              end),
+
+    receive Suspended -> ok end,
+    pong = rpc:call(Victim, net_adm, ping, [Offender]),
+    verify_up(Offender, Victim),
+    send_bad_msgs(Offender, P, 1, dmsg_bad_tag()),
+
+    %% Make sure bad msgs has reached Victim
+    rpc:call(Offender, rpc, call, [Victim, erlang, node, []]),
+
+    verify_still_up(Offender, Victim),
+
+    rpc:call(Victim, erlang, process_info, [P, total_heap_size]),
+
+    verify_down(Offender, connection_closed, Victim, killed),
+
+    P ! check_msgs,
+    exit(S, bang),  % resume Victim
+    receive {P, messages_checked} -> ok end,
+
+    unlink(P),
+    verify_no_down(Offender, Victim),
+    stop_node(Offender),
+    stop_node(Victim).
+
 
 bad_dist_struct_check_msgs([]) ->
     receive
@@ -1775,9 +1828,12 @@ send_bad_structure(Offender,Victim,Bad,WhereToPutSelf,PayLoad) ->
 send_bad_msg(BadNode, To) ->
     send_bad_msgs(BadNode, To, 1).
 
-send_bad_msgs(BadNode, To, Repeat) when is_atom(BadNode),
-                                        is_pid(To),
-                                        is_integer(Repeat) ->
+send_bad_msgs(BadNode, To, Repeat) ->
+    send_bad_msgs(BadNode, To, Repeat, dmsg_bad_atom_cache_ref()).
+
+send_bad_msgs(BadNode, To, Repeat, BadTerm) when is_atom(BadNode),
+                                                 is_pid(To),
+                                                 is_integer(Repeat) ->
     Parent = self(),
     Done = make_ref(),
     spawn_link(BadNode,
@@ -1787,7 +1843,7 @@ send_bad_msgs(BadNode, To, Repeat) when is_atom(BadNode),
                        DPrt = dport(Node),
                        DData = [dmsg_hdr(),
                                 dmsg_ext({?DOP_SEND, ?COOKIE, To}),
-                                dmsg_bad_atom_cache_ref()],
+                                BadTerm],
                        repeat(fun () -> port_command(DPrt, DData) end, Repeat),
                        Parent ! Done
                end),
@@ -1874,6 +1930,9 @@ dmsg_ext(Term) ->
 dmsg_bad_atom_cache_ref() ->
     [$R, 137].
 
+dmsg_bad_tag() ->  %% Will fail early at heap size calculation
+    [$?, 66].
+
 start_epmd_false(Config) when is_list(Config) ->
     %% Start a node with the option -start_epmd false.
     {ok, OtherNode} = start_node(start_epmd_false, "-start_epmd false"),
diff --git erts/vsn.mk erts/vsn.mk
index 1c6472a0ab..3d7ff2db66 100644
--- erts/vsn.mk
+++ erts/vsn.mk
@@ -18,7 +18,7 @@
 # %CopyrightEnd%
 # 
 
-VSN = 9.1.1
+VSN = 9.1.2
 
 # Port number 4365 in 4.2
 # Port number 4366 in 4.3
diff --git lib/diameter/doc/src/notes.xml lib/diameter/doc/src/notes.xml
index d1ad00de5c..589e7d5145 100644
--- lib/diameter/doc/src/notes.xml
+++ lib/diameter/doc/src/notes.xml
@@ -43,6 +43,23 @@ first.</p>
 
 <!-- ===================================================================== -->
 
+<section><title>diameter 2.1.1</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    An inadvertently removed monitor in diameter 2.1 caused
+	    the ets table diameter_reg to leak entries, and caused
+	    service restart and more to fail.</p>
+          <p>
+	    Own Id: OTP-14668 Aux Id: ERIERL-83 </p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
 <section><title>diameter 2.1</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
diff --git lib/diameter/src/base/diameter_reg.erl lib/diameter/src/base/diameter_reg.erl
index bd5db54a5c..5b7cfab31a 100644
--- lib/diameter/src/base/diameter_reg.erl
+++ lib/diameter/src/base/diameter_reg.erl
@@ -238,7 +238,11 @@ handle_call({add, Uniq, Key}, {Pid, _}, S) ->
     Rec = {Key, Pid},
     NS = flush(Uniq, Rec, S),  %% before insert
     {Res, New} = insert(Uniq, Rec),
-    {reply, Res, notify(add, New andalso Rec, NS)};
+    {reply, Res, notify(add, New andalso Rec, if New ->
+                                                      add_monitor(Pid, NS);
+                                                 true ->
+                                                      NS
+                                              end)};
 
 handle_call({remove, Key}, {Pid, _}, S) ->
     Rec = {Key, Pid},
@@ -294,6 +298,11 @@ terminate(_Reason, _State)->
 %% # code_change/3
 %% ----------------------------------------------------------
 
+code_change(_, State, "2.1") ->
+    {ok, lists:foldl(fun add_monitor/2,
+                     State,
+                     ets:select(?TABLE, [{{'_', '$1'}, [], ['$1']}]))};
+
 code_change(_OldVsn, State, _Extra) ->
     {ok, State}.
 
diff --git lib/diameter/src/diameter.appup.src lib/diameter/src/diameter.appup.src
index 7566cf25c3..c2198de9ea 100644
--- lib/diameter/src/diameter.appup.src
+++ lib/diameter/src/diameter.appup.src
@@ -53,7 +53,8 @@
   {"1.12",    [{restart_application, diameter}]},  %% 19.0
   {"1.12.1",  [{restart_application, diameter}]},  %% 19.1
   {"1.12.2",  [{restart_application, diameter}]},  %% 19.3
-  {"2.0",     [{restart_application, diameter}]}   %% 20.0
+  {"2.0",     [{restart_application, diameter}]},  %% 20.0
+  {"2.1",     [{update, diameter_reg, {advanced, "2.1"}}]} %% 20.1
  ],
  [
   {"0.9",     [{restart_application, diameter}]},
@@ -88,6 +89,7 @@
   {"1.12",    [{restart_application, diameter}]},
   {"1.12.1",  [{restart_application, diameter}]},
   {"1.12.2",  [{restart_application, diameter}]},
-  {"2.0",     [{restart_application, diameter}]}
+  {"2.0",     [{restart_application, diameter}]},
+  {"2.1",     [{restart_application, diameter}]}
  ]
 }.
diff --git lib/diameter/test/diameter_reg_SUITE.erl lib/diameter/test/diameter_reg_SUITE.erl
index e2a1ca00c3..cd9242faa8 100644
--- lib/diameter/test/diameter_reg_SUITE.erl
+++ lib/diameter/test/diameter_reg_SUITE.erl
@@ -1,7 +1,7 @@
 %%
 %% %CopyrightBegin%
 %%
-%% Copyright Ericsson AB 2010-2016. All Rights Reserved.
+%% Copyright Ericsson AB 2010-2017. All Rights Reserved.
 %%
 %% Licensed under the Apache License, Version 2.0 (the "License");
 %% you may not use this file except in compliance with the License.
@@ -34,6 +34,7 @@
 -export([add/1,
          add_new/1,
          remove/1,
+         down/1,
          terms/1,
          pids/1]).
 
@@ -56,6 +57,7 @@ tc() ->
     [add,
      add_new,
      remove,
+     down,
      terms,
      pids].
 
@@ -88,6 +90,13 @@ remove(_) ->
     [{Ref, Pid}] = ?reg:match(Ref),
     Pid = self().
 
+down(_) ->
+    Ref = make_ref(),
+    {_, MRef} = spawn_monitor(fun() -> ?reg:add_new(Ref), timer:sleep(1000) end),
+    receive {'DOWN', MRef, process, _, _} -> ok end,
+    timer:sleep(1000),
+    [] = ?reg:match(Ref).
+
 terms(_) ->
     Ref = make_ref(),
     true = ?reg:add_new(Ref),
diff --git lib/diameter/vsn.mk lib/diameter/vsn.mk
index e6dfddb5b2..f73f68da0b 100644
--- lib/diameter/vsn.mk
+++ lib/diameter/vsn.mk
@@ -17,5 +17,5 @@
 # %CopyrightEnd%
 
 APPLICATION  = diameter
-DIAMETER_VSN = 2.1
+DIAMETER_VSN = 2.1.1
 APP_VSN      = $(APPLICATION)-$(DIAMETER_VSN)$(PRE_VSN)
diff --git otp_versions.table otp_versions.table
index 6580a6e127..5db3575e19 100644
--- otp_versions.table
+++ otp_versions.table
@@ -1,3 +1,4 @@
+OTP-20.1.2 : diameter-2.1.1 erts-9.1.2 # asn1-5.0.3 common_test-1.15.2 compiler-7.1.3 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.2 cosTime-1.2.2 cosTransactions-1.3.2 crypto-4.1 debugger-4.2.3 dialyzer-3.2.2 edoc-0.9.1 eldap-1.2.2 erl_docgen-0.7.1 erl_interface-3.10 et-1.6.1 eunit-2.3.4 hipe-3.16.1 ic-4.4.2 inets-6.4.2 jinterface-1.8 kernel-5.4 megaco-3.18.2 mnesia-4.15.1 observer-2.5 odbc-2.12 orber-3.8.3 os_mon-2.4.3 otp_mibs-1.1.1 parsetools-2.1.5 public_key-1.5 reltool-0.7.5 runtime_tools-1.12.2 sasl-3.1 snmp-5.2.7 ssh-4.6.1 ssl-8.2.1 stdlib-3.4.2 syntax_tools-2.1.3 tools-2.11 wx-1.8.2 xmerl-1.3.15 :
 OTP-20.1.1 : compiler-7.1.3 erts-9.1.1 ssh-4.6.1 # asn1-5.0.3 common_test-1.15.2 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.2 cosTime-1.2.2 cosTransactions-1.3.2 crypto-4.1 debugger-4.2.3 dialyzer-3.2.2 diameter-2.1 edoc-0.9.1 eldap-1.2.2 erl_docgen-0.7.1 erl_interface-3.10 et-1.6.1 eunit-2.3.4 hipe-3.16.1 ic-4.4.2 inets-6.4.2 jinterface-1.8 kernel-5.4 megaco-3.18.2 mnesia-4.15.1 observer-2.5 odbc-2.12 orber-3.8.3 os_mon-2.4.3 otp_mibs-1.1.1 parsetools-2.1.5 public_key-1.5 reltool-0.7.5 runtime_tools-1.12.2 sasl-3.1 snmp-5.2.7 ssl-8.2.1 stdlib-3.4.2 syntax_tools-2.1.3 tools-2.11 wx-1.8.2 xmerl-1.3.15 :
 OTP-20.1 : asn1-5.0.3 common_test-1.15.2 compiler-7.1.2 crypto-4.1 debugger-4.2.3 dialyzer-3.2.2 diameter-2.1 edoc-0.9.1 erl_docgen-0.7.1 erts-9.1 et-1.6.1 eunit-2.3.4 hipe-3.16.1 inets-6.4.2 kernel-5.4 mnesia-4.15.1 observer-2.5 os_mon-2.4.3 public_key-1.5 reltool-0.7.5 runtime_tools-1.12.2 sasl-3.1 snmp-5.2.7 ssh-4.6 ssl-8.2.1 stdlib-3.4.2 syntax_tools-2.1.3 tools-2.11 wx-1.8.2 # cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.2 cosTime-1.2.2 cosTransactions-1.3.2 eldap-1.2.2 erl_interface-3.10 ic-4.4.2 jinterface-1.8 megaco-3.18.2 odbc-2.12 orber-3.8.3 otp_mibs-1.1.1 parsetools-2.1.5 xmerl-1.3.15 :
 OTP-20.0.5 : erts-9.0.5 inets-6.4.1 # asn1-5.0.2 common_test-1.15.1 compiler-7.1.1 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.2 cosTime-1.2.2 cosTransactions-1.3.2 crypto-4.0 debugger-4.2.2 dialyzer-3.2.1 diameter-2.0 edoc-0.9 eldap-1.2.2 erl_docgen-0.7 erl_interface-3.10 et-1.6 eunit-2.3.3 hipe-3.16 ic-4.4.2 jinterface-1.8 kernel-5.3.1 megaco-3.18.2 mnesia-4.15 observer-2.4 odbc-2.12 orber-3.8.3 os_mon-2.4.2 otp_mibs-1.1.1 parsetools-2.1.5 public_key-1.4.1 reltool-0.7.4 runtime_tools-1.12.1 sasl-3.0.4 snmp-5.2.6 ssh-4.5.1 ssl-8.2 stdlib-3.4.1 syntax_tools-2.1.2 tools-2.10.1 wx-1.8.1 xmerl-1.3.15 :
