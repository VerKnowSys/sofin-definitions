diff --git OTP_VERSION OTP_VERSION
index e021724..25720f4 100644
--- OTP_VERSION
+++ OTP_VERSION
@@ -1 +1 @@
-19.0.2
+19.0.3
diff --git lib/inets/doc/src/mod_esi.xml lib/inets/doc/src/mod_esi.xml
index 8279fdc..006fca1 100644
--- lib/inets/doc/src/mod_esi.xml
+++ lib/inets/doc/src/mod_esi.xml
@@ -61,7 +61,7 @@
 	<tag><c>{server_port, integer()}</c></tag>
 	<item><p>Servers port number.</p></item>
 	
-	<tag><c>{request_method, "GET | "PUT" | "DELETE | "POST" | "PATCH"}</c></tag>
+	<tag><c>{request_method, "GET | "PUT" | "DELETE" | "POST" | "PATCH"}</c></tag>
 	<item><p>HTTP request method.</p></item>
 		
 	<tag><c>{remote_adress, inet:ip_address()} </c></tag>
diff --git lib/inets/doc/src/notes.xml lib/inets/doc/src/notes.xml
index 2f071f0..caa5a08 100644
--- lib/inets/doc/src/notes.xml
+++ lib/inets/doc/src/notes.xml
@@ -33,7 +33,22 @@
     <file>notes.xml</file>
   </header>
   
-  <section><title>Inets 6.3.1</title>
+  <section><title>Inets 6.3.2</title>
+
+    <section><title>Improvements and New Features</title>
+      <list>
+        <item>
+          <p>
+	    PUT and DELETE support has been added to mod_esi</p>
+          <p>
+	    Own Id: OTP-13688 Aux Id: seq13149 </p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
+<section><title>Inets 6.3.1</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
       <list>
diff --git lib/inets/src/http_server/httpd_example.erl lib/inets/src/http_server/httpd_example.erl
index 424d269..c893b10 100644
--- lib/inets/src/http_server/httpd_example.erl
+++ lib/inets/src/http_server/httpd_example.erl
@@ -20,7 +20,7 @@
 %%
 -module(httpd_example).
 -export([print/1]).
--export([get/2, post/2, yahoo/2, test1/2, get_bin/2, peer/2]).
+-export([get/2, put/2, post/2, yahoo/2, test1/2, get_bin/2, peer/2]).
 
 -export([newformat/3]).
 %% These are used by the inets test-suite
@@ -59,6 +59,11 @@ get(_Env,[]) ->
 get(Env,Input) ->
   default(Env,Input).
 
+put(Env,{Input,_Body}) ->
+    default(Env,Input);
+put(Env,Input) ->
+    default(Env,Input).
+
 get_bin(_Env,_Input) ->
     [list_to_binary(header()),
      list_to_binary(top("GET Example")),
@@ -94,7 +99,7 @@ default(Env,Input) ->
    io_lib:format("~p",[httpd:parse_query(Input)]),"\n",
    footer()].
 
-peer(Env, Input) ->
+peer(Env, _Input) ->
    Header = 
      case proplists:get_value(peer_cert, Env) of
        undefined ->
@@ -161,7 +166,7 @@ sleep(T) -> receive after T -> ok end.
 
 %% ------------------------------------------------------
 
-chunk_timeout(SessionID, _, StrInt) ->
+chunk_timeout(SessionID, _, _StrInt) ->
     mod_esi:deliver(SessionID, "Tranfer-Encoding:chunked/html\r\n\r\n"),
     mod_esi:deliver(SessionID, top("Test chunk encoding timeout")),
     timer:sleep(20000),
diff --git lib/inets/src/http_server/mod_esi.erl lib/inets/src/http_server/mod_esi.erl
index 2800250..b21af14 100644
--- lib/inets/src/http_server/mod_esi.erl
+++ lib/inets/src/http_server/mod_esi.erl
@@ -241,7 +241,7 @@ alias_match_str(Alias, eval_script_alias) ->
 %%------------------------ Erl mechanism --------------------------------
 
 erl(#mod{method = Method} = ModData, ESIBody, Modules) 
-  when (Method =:= "GET") orelse (Method =:= "HEAD") ->
+  when (Method =:= "GET") orelse (Method =:= "HEAD") orelse (Method =:= "DELETE") ->
     ?hdrt("erl", [{method, Method}]),
     case httpd_util:split(ESIBody,":|%3A|/",2) of
 	{ok, [ModuleName, FuncAndInput]} ->
@@ -264,35 +264,32 @@ erl(#mod{method = Method} = ModData, ESIBody, Modules)
 	    {proceed, [{status,{400, none, BadRequest}} | ModData#mod.data]}
     end;
 
-erl(#mod{request_uri  = ReqUri, 
-	 method       = "PUT",
-         http_version = Version, 
-	 data         = Data}, _ESIBody, _Modules) ->
-    ?hdrt("erl", [{method, put}]),
-    {proceed, [{status,{501,{"PUT", ReqUri, Version},
-			?NICE("Erl mechanism doesn't support method PUT")}}|
-	       Data]};
+erl(#mod{method = "PUT", entity_body = Body} = ModData,
+    ESIBody, Modules) ->
+    case httpd_util:split(ESIBody,":|%3A|/",2) of
+	{ok, [ModuleName, FuncAndInput]} ->                
+	    case httpd_util:split(FuncAndInput,"[\?/]",2) of
+		{ok, [FunctionName, Input]} ->
+		    generate_webpage(ModData, ESIBody, Modules,
+				     list_to_atom(ModuleName),
+				     FunctionName, {Input,Body},
+				     [{entity_body, Body} |
+				      script_elements(FuncAndInput, Input)]);
+		{ok, [FunctionName]} ->
+		    generate_webpage(ModData, ESIBody, Modules,
+				     list_to_atom(ModuleName),
+				     FunctionName, {undefined,Body},
+				     [{entity_body, Body} |
+				      script_elements(FuncAndInput, "")]);
+		{ok, BadRequest} ->
+		    {proceed,[{status,{400,none, BadRequest}} |
+			      ModData#mod.data]}
+	    end;
+	{ok, BadRequest} ->
+	    {proceed, [{status,{400, none, BadRequest}} | ModData#mod.data]}
+    end;   
 
-erl(#mod{request_uri  = ReqUri, 
-	 method       = "DELETE",
-         http_version = Version, 
-	 data         = Data}, _ESIBody, _Modules) ->
-    ?hdrt("erl", [{method, delete}]),
-    {proceed,[{status,{501,{"DELETE", ReqUri, Version},
-		       ?NICE("Erl mechanism doesn't support method DELETE")}}|
-	      Data]};
-
-erl(#mod{request_uri  = ReqUri, 
-	 method       = "PATCH",
-         http_version = Version, 
-	 data         = Data}, _ESIBody, _Modules) ->
-    ?hdrt("erl", [{method, patch}]),
-    {proceed, [{status,{501,{"PATCH", ReqUri, Version},
-			?NICE("Erl mechanism doesn't support method PATCH")}}|
-	       Data]};
-
-erl(#mod{method      = "POST", 
-	 entity_body = Body} = ModData, ESIBody, Modules) ->
+erl(#mod{method = "POST", entity_body = Body} = ModData, ESIBody, Modules) ->
     ?hdrt("erl", [{method, post}]),
     case httpd_util:split(ESIBody,":|%3A|/",2) of
 	{ok,[ModuleName, Function]} ->
@@ -301,7 +298,16 @@ erl(#mod{method      = "POST",
 			     Function, Body, [{entity_body, Body}]);
 	{ok, BadRequest} ->
 	    {proceed,[{status, {400, none, BadRequest}} | ModData#mod.data]}
-    end.
+    end;
+
+erl(#mod{request_uri  = ReqUri, 
+	 method       = "PATCH",
+         http_version = Version, 
+	 data         = Data}, _ESIBody, _Modules) ->
+    ?hdrt("erl", [{method, patch}]),
+    {proceed, [{status,{501,{"PATCH", ReqUri, Version},
+			?NICE("Erl mechanism doesn't support method PATCH")}}|
+	       Data]}.
 
 generate_webpage(ModData, ESIBody, [all], Module, FunctionName,
 		 Input, ScriptElements) ->
diff --git lib/inets/src/inets_app/inets.appup.src lib/inets/src/inets_app/inets.appup.src
index 3a31dae..d4d21f6 100644
--- lib/inets/src/inets_app/inets.appup.src
+++ lib/inets/src/inets_app/inets.appup.src
@@ -18,10 +18,16 @@
 %% %CopyrightEnd%
 {"%VSN%",
  [
+  {<<"6.3.1">>,
+   [{load_module, mod_esi, soft_purge, soft_purge, []}
+   ]},
   {<<"6\\..*">>,[{restart_application, inets}]},
   {<<"5\\..*">>,[{restart_application, inets}]}
  ],
  [
+  {<<"6.3.1">>,
+   [{load_module, mod_esi, soft_purge, soft_purge, []}
+   ]},
   {<<"6\\..*">>,[{restart_application, inets}]},
   {<<"5\\..*">>,[{restart_application, inets}]}
  ]
diff --git lib/inets/test/httpd_SUITE.erl lib/inets/test/httpd_SUITE.erl
index 3194b5a..28e7715 100644
--- lib/inets/test/httpd_SUITE.erl
+++ lib/inets/test/httpd_SUITE.erl
@@ -1,7 +1,7 @@
 %%
 %% %CopyrightBegin%
 %% 
-%% Copyright Ericsson AB 2013-2015. All Rights Reserved.
+%% Copyright Ericsson AB 2013-2016. All Rights Reserved.
 %% 
 %% Licensed under the Apache License, Version 2.0 (the "License");
 %% you may not use this file except in compliance with the License.
@@ -119,8 +119,10 @@ groups() ->
 			   ]},
      {htaccess, [], [htaccess_1_1, htaccess_1_0, htaccess_0_9]},
      {security, [], [security_1_1, security_1_0]}, %% Skip 0.9 as causes timing issus in test code
-     {http_1_1, [], [host, chunked, expect, cgi, cgi_chunked_encoding_test,
-		     trace, range, if_modified_since, mod_esi_chunk_timeout] ++ http_head() ++ http_get() ++ load()},
+     {http_1_1, [],
+      [host, chunked, expect, cgi, cgi_chunked_encoding_test,
+       trace, range, if_modified_since, mod_esi_chunk_timeout,
+       esi_put] ++ http_head() ++ http_get() ++ load()},
      {http_1_0, [], [host, cgi, trace] ++ http_head() ++ http_get() ++ load()},
      {http_0_9, [], http_head() ++ http_get() ++ load()}
     ].
@@ -283,20 +285,50 @@ init_per_testcase(Case, Config) when Case == host; Case == trace ->
 	     http_1_1 ->
 		 httpd_1_1
 	 end,
-    [{version_cb, Cb} | proplists:delete(version_cb, Config)];
+    dbg(
+      Case,
+      [{version_cb, Cb} | proplists:delete(version_cb, Config)],
+      init);
 
 init_per_testcase(range, Config) ->
     ct:timetrap({seconds, 20}),
     DocRoot = proplists:get_value(doc_root, Config),
     create_range_data(DocRoot),
-    Config;
+    dbg(range, Config, init);
 
-init_per_testcase(_, Config) ->
+init_per_testcase(Case, Config) ->
     ct:timetrap({seconds, 20}),
-    Config.
+    dbg(Case, Config, init).
 
-end_per_testcase(_Case, _Config) ->
-    ok.
+end_per_testcase(Case, Config) ->
+    dbg(Case, Config, 'end').
+
+
+dbg(Case, Config, Status) ->
+    Cases = [esi_put],
+    case lists:member(Case, Cases) of
+	true ->
+	    case Status of
+		init ->
+		    dbg:tracer(),
+		    dbg:p(all, c),
+		    dbg:tpl(httpd_example, cx),
+		    dbg:tpl(mod_esi, generate_webpage, cx),
+		    io:format("dbg: started~n"),
+		    Config;
+		'end' ->
+		    io:format("dbg: stopped~n"),
+		    dbg:stop_clear(),
+		    ok
+	    end;
+	false ->
+	    case Status of
+		init ->
+		    Config;
+		'end' ->
+		    ok
+	    end
+    end.
 
 %%-------------------------------------------------------------------------
 %% Test cases starts here.
@@ -765,6 +797,14 @@ esi(Config) when is_list(Config) ->
     ok = http_status("GET /cgi-bin/erl/httpd_example:peer ",
 	  	     Config, [{statuscode, 200},
 	 	      {header, "peer-cert-exist", peer(Config)}]).
+
+%%-------------------------------------------------------------------------
+esi_put() ->
+    [{doc, "Test mod_esi PUT"}].
+
+esi_put(Config) when is_list(Config) ->
+    ok = http_status("PUT /cgi-bin/erl/httpd_example/put/123342234123 ",
+		     Config, [{statuscode, 200}]).
  
 %%-------------------------------------------------------------------------
 mod_esi_chunk_timeout(Config) when is_list(Config) -> 
diff --git lib/inets/vsn.mk lib/inets/vsn.mk
index 3408c3b..747724a 100644
--- lib/inets/vsn.mk
+++ lib/inets/vsn.mk
@@ -19,6 +19,6 @@
 # %CopyrightEnd%
 
 APPLICATION = inets
-INETS_VSN   = 6.3.1
+INETS_VSN   = 6.3.2
 PRE_VSN     =
 APP_VSN     = "$(APPLICATION)-$(INETS_VSN)$(PRE_VSN)"
diff --git lib/kernel/doc/src/notes.xml lib/kernel/doc/src/notes.xml
index f374331..0e3914b 100644
--- lib/kernel/doc/src/notes.xml
+++ lib/kernel/doc/src/notes.xml
@@ -31,6 +31,24 @@
   </header>
   <p>This document describes the changes made to the Kernel application.</p>
 
+<section><title>Kernel 5.0.1</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    Fix a os:cmd bug where creating a background job using
+	    &amp; would cause os:cmd to hang until the background job
+	    terminated or closed its stdout and stderr file
+	    descriptors. This bug has existed from kernel 5.0.</p>
+          <p>
+	    Own Id: OTP-13741</p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
 <section><title>Kernel 5.0</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
diff --git lib/kernel/src/os.erl lib/kernel/src/os.erl
index f0ad26b..81b70a7 100644
--- lib/kernel/src/os.erl
+++ lib/kernel/src/os.erl
@@ -226,11 +226,13 @@ extensions() ->
       Command :: atom() | io_lib:chars().
 cmd(Cmd) ->
     validate(Cmd),
-    {SpawnCmd, SpawnOpts, SpawnInput} = mk_cmd(os:type(), Cmd),
+    {SpawnCmd, SpawnOpts, SpawnInput, Eot} = mk_cmd(os:type(), Cmd),
     Port = open_port({spawn, SpawnCmd}, [binary, stderr_to_stdout,
-                                         stream, in, eof, hide | SpawnOpts]),
+                                         stream, in, hide | SpawnOpts]),
+    MonRef = erlang:monitor(port, Port),
     true = port_command(Port, SpawnInput),
-    Bytes = get_data(Port, []),
+    Bytes = get_data(Port, MonRef, Eot, []),
+    demonitor(MonRef, [flush]),
     String = unicode:characters_to_list(Bytes),
     if  %% Convert to unicode list if possible otherwise return bytes
 	is_list(String) -> String;
@@ -243,7 +245,7 @@ mk_cmd({win32,Wtype}, Cmd) ->
                   {false,_} -> lists:concat(["cmd /c", Cmd]);
                   {Cspec,_} -> lists:concat([Cspec," /c",Cmd])
               end,
-    {Command, [], []};
+    {Command, [], [], <<>>};
 mk_cmd(OsType,Cmd) when is_atom(Cmd) ->
     mk_cmd(OsType, atom_to_list(Cmd));
 mk_cmd(_,Cmd) ->
@@ -252,7 +254,8 @@ mk_cmd(_,Cmd) ->
     {"/bin/sh -s unix:cmd", [out],
      %% We insert a new line after the command, in case the command
      %% contains a comment character.
-     ["(", unicode:characters_to_binary(Cmd), "\n); exit\n"]}.
+     ["(", unicode:characters_to_binary(Cmd), "\n); echo \"\^D\"\n"],
+     <<$\^D>>}.
 
 validate(Atom) when is_atom(Atom) ->
     ok;
@@ -267,16 +270,18 @@ validate1([List|Rest]) when is_list(List) ->
 validate1([]) ->
     ok.
 
-get_data(Port, Sofar) ->
+get_data(Port, MonRef, Eot, Sofar) ->
     receive
 	{Port, {data, Bytes}} ->
-	    get_data(Port, [Sofar,Bytes]);
-	{Port, eof} ->
-	    Port ! {self(), close},
-	    receive
-		{Port, closed} ->
-		    true
-	    end,
+            case eot(Bytes, Eot) of
+                more ->
+                    get_data(Port, MonRef, Eot, [Sofar,Bytes]);
+                Last ->
+                    Port ! {self(), close},
+                    flush_until_closed(Port),
+                    iolist_to_binary([Sofar, Last])
+            end;
+        {'DOWN', MonRef, _, _ , _} ->
 	    receive
 		{'EXIT',  Port,  _} ->
 		    ok
@@ -285,3 +290,20 @@ get_data(Port, Sofar) ->
 	    end,
 	    iolist_to_binary(Sofar)
     end.
+
+eot(_Bs, <<>>) ->
+    more;
+eot(Bs, Eot) ->
+    case binary:match(Bs, Eot) of
+        nomatch -> more;
+        {Pos, _} ->
+            binary:part(Bs,{0, Pos})
+    end.
+
+flush_until_closed(Port) ->
+    receive
+        {Port, {data, _Bytes}} ->
+            flush_until_closed(Port);
+        {Port, closed} ->
+            true
+    end.
diff --git lib/kernel/test/os_SUITE.erl lib/kernel/test/os_SUITE.erl
index 2a1e501..8f3e511 100644
--- lib/kernel/test/os_SUITE.erl
+++ lib/kernel/test/os_SUITE.erl
@@ -24,7 +24,8 @@
 	 init_per_testcase/2,end_per_testcase/2]).
 -export([space_in_cwd/1, quoting/1, cmd_unicode/1, space_in_name/1, bad_command/1,
 	 find_executable/1, unix_comment_in_command/1, deep_list_command/1,
-         large_output_command/1, perf_counter_api/1]).
+         large_output_command/1, background_command/0, background_command/1,
+         perf_counter_api/1]).
 
 -include_lib("common_test/include/ct.hrl").
 
@@ -35,7 +36,7 @@ suite() ->
 all() ->
     [space_in_cwd, quoting, cmd_unicode, space_in_name, bad_command,
      find_executable, unix_comment_in_command, deep_list_command,
-     large_output_command, perf_counter_api].
+     large_output_command, background_command, perf_counter_api].
 
 groups() ->
     [].
@@ -52,6 +53,13 @@ init_per_group(_GroupName, Config) ->
 end_per_group(_GroupName, Config) ->
     Config.
 
+init_per_testcase(background_command, Config) ->
+    case os:type() of
+        {win32, _} ->
+            {skip,"Should not work on windows"};
+        _ ->
+            Config
+    end;
 init_per_testcase(_TC,Config) ->
     Config.
 
@@ -261,13 +269,21 @@ deep_list_command(Config) when is_list(Config) ->
     %% FYI: [$e, $c, "ho"] =:= io_lib:format("ec~s", ["ho"])
     ok.
 
-%% Test to take sure that the correct data is
+%% Test to make sure that the correct data is
 %% received when doing large commands.
 large_output_command(Config) when is_list(Config) ->
     %% Maximum allowed on windows is 8192, so we test well below that
     AAA = lists:duplicate(7000, $a),
     comp(AAA,os:cmd("echo " ++ AAA)).
 
+%% Test that it is possible on unix to start a background task using os:cmd.
+background_command() ->
+    [{timetrap, {seconds, 5}}].
+background_command(_Config) ->
+    %% This testcase fails when the os:cmd takes
+    %% longer then the 5 second timeout
+    os:cmd("sleep 10&").
+
 %% Test that the os:perf_counter api works as expected
 perf_counter_api(_Config) ->
 
diff --git lib/kernel/vsn.mk lib/kernel/vsn.mk
index e7d422d..e88e4f91 100644
--- lib/kernel/vsn.mk
+++ lib/kernel/vsn.mk
@@ -1 +1 @@
-KERNEL_VSN = 5.0
+KERNEL_VSN = 5.0.1
diff --git lib/ssl/doc/src/notes.xml lib/ssl/doc/src/notes.xml
index 3b6f988..9d68ee0 100644
--- lib/ssl/doc/src/notes.xml
+++ lib/ssl/doc/src/notes.xml
@@ -28,6 +28,26 @@
   <p>This document describes the changes made to the SSL application.</p>
 
 
+<section><title>SSL 8.0.1</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    The TLS/SSL protocol version selection for the SSL server
+	    has been corrected to follow RFC 5246 Appendix E.1
+	    especially in case where the list of supported versions
+	    has gaps. Now the server selects the highest protocol
+	    version it supports that is not higher than what the
+	    client supports.</p>
+          <p>
+	    Own Id: OTP-13753 Aux Id: seq13150 </p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
 <section><title>SSL 8.0</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
diff --git lib/ssl/src/ssl.appup.src lib/ssl/src/ssl.appup.src
index 1172812..fadc67e 100644
--- lib/ssl/src/ssl.appup.src
+++ lib/ssl/src/ssl.appup.src
@@ -1,14 +1,20 @@
 %% -*- erlang -*-
 {"%VSN%",
  [
-  {<<"7\\..*">>, [{restart_application, ssl}]},
+  {<<"^8[.]0$">>,
+   [{load_module, ssl_handshake, soft_purge, soft_purge, []}
+   ]},
+  {<<"^7[.][^.].*">>, [{restart_application, ssl}]},
   {<<"6\\..*">>, [{restart_application, ssl}]},
   {<<"5\\..*">>, [{restart_application, ssl}]},
   {<<"4\\..*">>, [{restart_application, ssl}]},
   {<<"3\\..*">>, [{restart_application, ssl}]}
  ], 
  [
-  {<<"7\\..*">>, [{restart_application, ssl}]},
+  {<<"^8[.]0$">>,
+   [{load_module, ssl_handshake, soft_purge, soft_purge, []}
+   ]},
+  {<<"^7[.][^.].*">>, [{restart_application, ssl}]},
   {<<"6\\..*">>, [{restart_application, ssl}]},
   {<<"5\\..*">>, [{restart_application, ssl}]},
   {<<"4\\..*">>, [{restart_application, ssl}]},
diff --git lib/ssl/src/ssl_handshake.erl lib/ssl/src/ssl_handshake.erl
index 9c3fe9d..06226d5 100644
--- lib/ssl/src/ssl_handshake.erl
+++ lib/ssl/src/ssl_handshake.erl
@@ -1256,8 +1256,40 @@ handle_server_hello_extensions(RecordCB, Random, CipherSuite, Compression,
     end.
 
 select_version(RecordCB, ClientVersion, Versions) ->
-    ServerVersion = RecordCB:highest_protocol_version(Versions),
-    RecordCB:lowest_protocol_version(ClientVersion, ServerVersion).
+    do_select_version(RecordCB, ClientVersion, Versions).
+
+do_select_version(_, ClientVersion, []) ->
+    ClientVersion;
+do_select_version(RecordCB, ClientVersion, [Version | Versions]) ->
+    case RecordCB:is_higher(Version, ClientVersion) of
+	true ->
+	    %% Version too high for client - keep looking
+	    do_select_version(RecordCB, ClientVersion, Versions);
+	false ->
+	    %% Version ok for client - look for a higher
+	    do_select_version(RecordCB, ClientVersion, Versions, Version)
+    end.
+%%
+do_select_version(_, _, [], GoodVersion) ->
+    GoodVersion;
+do_select_version(
+  RecordCB, ClientVersion, [Version | Versions], GoodVersion) ->
+    BetterVersion =
+	case RecordCB:is_higher(Version, ClientVersion) of
+	    true ->
+		%% Version too high for client
+		GoodVersion;
+	    false ->
+		%% Version ok for client
+		case RecordCB:is_higher(Version, GoodVersion) of
+		    true ->
+			%% Use higher version
+			Version;
+		    false ->
+			GoodVersion
+		end
+	end,
+    do_select_version(RecordCB, ClientVersion, Versions, BetterVersion).
 
 renegotiation_info(_, client, _, false) ->
     #renegotiation_info{renegotiated_connection = undefined};
diff --git lib/ssl/vsn.mk lib/ssl/vsn.mk
index 3b51fa8..6afac59 100644
--- lib/ssl/vsn.mk
+++ lib/ssl/vsn.mk
@@ -1 +1 @@
-SSL_VSN = 8.0
+SSL_VSN = 8.0.1
diff --git otp_versions.table otp_versions.table
index 7634896..d21d78c 100644
--- otp_versions.table
+++ otp_versions.table
@@ -1,3 +1,4 @@
+OTP-19.0.3 : inets-6.3.2 kernel-5.0.1 ssl-8.0.1 # asn1-4.0.3 common_test-1.12.2 compiler-7.0.1 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7 debugger-4.2 dialyzer-3.0.1 diameter-1.12 edoc-0.7.19 eldap-1.2.2 erl_docgen-0.5 erl_interface-3.9 erts-8.0.2 et-1.6 eunit-2.3 gs-1.6.1 hipe-3.15.1 ic-4.4.1 jinterface-1.7 megaco-3.18.1 mnesia-4.14 observer-2.2.1 odbc-2.11.2 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.2 percept-0.9 public_key-1.2 reltool-0.7.1 runtime_tools-1.10 sasl-3.0 snmp-5.2.3 ssh-4.3.1 stdlib-3.0.1 syntax_tools-2.0 tools-2.8.5 typer-0.9.11 wx-1.7 xmerl-1.3.11 :
 OTP-19.0.2 : compiler-7.0.1 erts-8.0.2 stdlib-3.0.1 # asn1-4.0.3 common_test-1.12.2 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7 debugger-4.2 dialyzer-3.0.1 diameter-1.12 edoc-0.7.19 eldap-1.2.2 erl_docgen-0.5 erl_interface-3.9 et-1.6 eunit-2.3 gs-1.6.1 hipe-3.15.1 ic-4.4.1 inets-6.3.1 jinterface-1.7 kernel-5.0 megaco-3.18.1 mnesia-4.14 observer-2.2.1 odbc-2.11.2 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.2 percept-0.9 public_key-1.2 reltool-0.7.1 runtime_tools-1.10 sasl-3.0 snmp-5.2.3 ssh-4.3.1 ssl-8.0 syntax_tools-2.0 tools-2.8.5 typer-0.9.11 wx-1.7 xmerl-1.3.11 :
 OTP-19.0.1 : dialyzer-3.0.1 erts-8.0.1 inets-6.3.1 observer-2.2.1 ssh-4.3.1 tools-2.8.5 # asn1-4.0.3 common_test-1.12.2 compiler-7.0 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7 debugger-4.2 diameter-1.12 edoc-0.7.19 eldap-1.2.2 erl_docgen-0.5 erl_interface-3.9 et-1.6 eunit-2.3 gs-1.6.1 hipe-3.15.1 ic-4.4.1 jinterface-1.7 kernel-5.0 megaco-3.18.1 mnesia-4.14 odbc-2.11.2 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.2 percept-0.9 public_key-1.2 reltool-0.7.1 runtime_tools-1.10 sasl-3.0 snmp-5.2.3 ssl-8.0 stdlib-3.0 syntax_tools-2.0 typer-0.9.11 wx-1.7 xmerl-1.3.11 :
 OTP-19.0 : asn1-4.0.3 common_test-1.12.2 compiler-7.0 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7 debugger-4.2 dialyzer-3.0 diameter-1.12 edoc-0.7.19 eldap-1.2.2 erl_docgen-0.5 erl_interface-3.9 erts-8.0 et-1.6 eunit-2.3 gs-1.6.1 hipe-3.15.1 ic-4.4.1 inets-6.3 jinterface-1.7 kernel-5.0 megaco-3.18.1 mnesia-4.14 observer-2.2 odbc-2.11.2 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.2 percept-0.9 public_key-1.2 reltool-0.7.1 runtime_tools-1.10 sasl-3.0 snmp-5.2.3 ssh-4.3 ssl-8.0 stdlib-3.0 syntax_tools-2.0 tools-2.8.4 typer-0.9.11 wx-1.7 xmerl-1.3.11 # :
