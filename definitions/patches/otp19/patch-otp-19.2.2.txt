diff --git OTP_VERSION OTP_VERSION
index 34716091d..d16f3ea71 100644
--- OTP_VERSION
+++ OTP_VERSION
@@ -1 +1 @@
-19.2.1
+19.2.2
diff --git lib/mnesia/doc/src/notes.xml lib/mnesia/doc/src/notes.xml
index 51c98d0d3..9f59759cb 100644
--- lib/mnesia/doc/src/notes.xml
+++ lib/mnesia/doc/src/notes.xml
@@ -39,7 +39,23 @@
     thus constitutes one section in this document. The title of each
     section is the version number of Mnesia.</p>
 
-  <section><title>Mnesia 4.14.2</title>
+  <section><title>Mnesia 4.14.3</title>
+
+    <section><title>Fixed Bugs and Malfunctions</title>
+      <list>
+        <item>
+          <p>
+	    Fixed crash in checkpoint handling when table was deleted
+	    during backup.</p>
+          <p>
+	    Own Id: OTP-14167</p>
+        </item>
+      </list>
+    </section>
+
+</section>
+
+<section><title>Mnesia 4.14.2</title>
 
     <section><title>Fixed Bugs and Malfunctions</title>
       <list>
diff --git lib/mnesia/src/mnesia_checkpoint.erl lib/mnesia/src/mnesia_checkpoint.erl
index 9eb939e8d..fc626940b 100644
--- lib/mnesia/src/mnesia_checkpoint.erl
+++ lib/mnesia/src/mnesia_checkpoint.erl
@@ -909,7 +909,7 @@ retainer_loop(Cp = #checkpoint_args{name=Name}) ->
 	    retainer_loop(Cp2);
 
 	{From, {iter_end, Iter}}  ->
-	    retainer_fixtable(Iter#iter.oid_tab, false),
+	    ?SAFE(retainer_fixtable(Iter#iter.oid_tab, false)),
 	    Iters = Cp#checkpoint_args.iterators -- [Iter],
 	    reply(From, Name, ok),
 	    retainer_loop(Cp#checkpoint_args{iterators = Iters});
@@ -971,7 +971,8 @@ do_stop(Cp) ->
     unset({checkpoint, Name}),
     lists:foreach(fun deactivate_tab/1, Cp#checkpoint_args.retainers),
     Iters = Cp#checkpoint_args.iterators,
-    lists:foreach(fun(I) -> retainer_fixtable(I#iter.oid_tab, false) end, Iters).
+    [?SAFE(retainer_fixtable(Tab, false)) || #iter{main_tab=Tab} <- Iters],
+    ok.
 
 deactivate_tab(R) ->
     Name = R#retainer.cp_name,
@@ -1151,7 +1152,7 @@ do_change_copy(Cp, Tab, FromType, ToType) ->
     Cp#checkpoint_args{retainers = Rs, nodes = writers(Rs)}.
 
 check_iter(From, Iter) when Iter#iter.pid == From ->
-    retainer_fixtable(Iter#iter.oid_tab, false),
+    ?SAFE(retainer_fixtable(Iter#iter.oid_tab, false)),
     false;
 check_iter(_From, _Iter) ->
     true.
diff --git lib/mnesia/src/mnesia_event.erl lib/mnesia/src/mnesia_event.erl
index 7320d381e..6f7531245 100644
--- lib/mnesia/src/mnesia_event.erl
+++ lib/mnesia/src/mnesia_event.erl
@@ -114,7 +114,8 @@ handle_table_event({Oper, Record, TransId}, State) ->
 handle_system_event({mnesia_checkpoint_activated, _Checkpoint}, State) ->
     {ok, State};
 
-handle_system_event({mnesia_checkpoint_deactivated, _Checkpoint}, State) ->
+handle_system_event({mnesia_checkpoint_deactivated, Checkpoint}, State) ->
+    report_error("Checkpoint '~p' has been deactivated, last table copy deleted.\n",[Checkpoint]),
     {ok, State};
 
 handle_system_event({mnesia_up, Node}, State) ->
diff --git lib/mnesia/test/mnesia_evil_backup.erl lib/mnesia/test/mnesia_evil_backup.erl
index e745ec9b0..044cf501f 100644
--- lib/mnesia/test/mnesia_evil_backup.erl
+++ lib/mnesia/test/mnesia_evil_backup.erl
@@ -723,18 +723,18 @@ bup_records(File, Mod) ->
 	    exit(Reason)
     end.
 
-sops_with_checkpoint(doc) -> 
+sops_with_checkpoint(doc) ->
     ["Test schema operations during a checkpoint"];
 sops_with_checkpoint(suite) -> [];
 sops_with_checkpoint(Config) when is_list(Config) ->
-    Ns = ?acquire_nodes(2, Config),
-    
+    Ns = [N1,N2] = ?acquire_nodes(2, Config),
+
     ?match({ok, cp1, Ns}, mnesia:activate_checkpoint([{name, cp1},{max,mnesia:system_info(tables)}])),
-    Tab = tab, 
+    Tab = tab,
     ?match({atomic, ok}, mnesia:create_table(Tab, [{disc_copies,Ns}])),
     OldRecs = [{Tab, K, -K} || K <- lists:seq(1, 5)],
     [mnesia:dirty_write(R) || R <- OldRecs],
-    
+
     ?match({ok, cp2, Ns}, mnesia:activate_checkpoint([{name, cp2},{max,mnesia:system_info(tables)}])),
     File1 = "cp1_delete_me.BUP",
     ?match(ok, mnesia:dirty_write({Tab,6,-6})),
@@ -742,16 +742,16 @@ sops_with_checkpoint(Config) when is_list(Config) ->
     ?match(ok, mnesia:dirty_write({Tab,7,-7})),
     File2 = "cp2_delete_me.BUP",
     ?match(ok, mnesia:backup_checkpoint(cp2, File2)),
-    
+
     ?match(ok, mnesia:deactivate_checkpoint(cp1)),
     ?match(ok, mnesia:backup_checkpoint(cp2, File1)),
     ?match(ok, mnesia:dirty_write({Tab,8,-8})),
-    
+
     ?match({atomic,ok}, mnesia:delete_table(Tab)),
     ?match({error,_}, mnesia:backup_checkpoint(cp2, File2)),
     ?match({'EXIT',_}, mnesia:dirty_write({Tab,9,-9})),
 
-    ?match({atomic,_}, mnesia:restore(File1, [{default_op, recreate_tables}])), 
+    ?match({atomic,_}, mnesia:restore(File1, [{default_op, recreate_tables}])),
     Test = fun(N) when N > 5 -> ?error("To many records in backup ~p ~n", [N]);
 	      (N) -> case mnesia:dirty_read(Tab,N) of
 			 [{Tab,N,B}] when -B =:= N -> ok;
@@ -759,8 +759,29 @@ sops_with_checkpoint(Config) when is_list(Config) ->
 		     end
 	   end,
     [Test(N) || N <- mnesia:dirty_all_keys(Tab)],
-    ?match({aborted,enoent}, mnesia:restore(File2, [{default_op, recreate_tables}])), 
-    
+    ?match({aborted,enoent}, mnesia:restore(File2, [{default_op, recreate_tables}])),
+
+    %% Mnesia crashes when deleting a table during backup
+    ?match([], mnesia_test_lib:stop_mnesia([N2])),
+    Tab2 = ram,
+    ?match({atomic, ok}, mnesia:create_table(Tab2, [{ram_copies,[N1]}])),
+    ?match({ok, cp3, _}, mnesia:activate_checkpoint([{name, cp3},
+                                                     {ram_overrides_dump,true},
+                                                     {min,[Tab2]}])),
+    Write = fun Loop (N) ->
+                   case N > 0 of
+                       true ->
+                           mnesia:dirty_write({Tab2, N+100, N+100}),
+                           Loop(N-1);
+                       false ->
+                           ok
+                   end
+           end,
+    ok = Write(100000),
+    spawn_link(fun() -> ?match({atomic, ok},mnesia:delete_table(Tab2)) end),
+
+    %% We don't check result here, depends on timing of above call
+    mnesia:backup_checkpoint(cp3, File2),
     file:delete(File1), file:delete(File2),
 
-    ?verify_mnesia(Ns, []).
+    ?verify_mnesia([N1], [N2]).
diff --git lib/mnesia/vsn.mk lib/mnesia/vsn.mk
index 439b21e58..e272a469b 100644
--- lib/mnesia/vsn.mk
+++ lib/mnesia/vsn.mk
@@ -1 +1 @@
-MNESIA_VSN = 4.14.2
+MNESIA_VSN = 4.14.3
diff --git otp_versions.table otp_versions.table
index 575a35801..2f3187896 100644
--- otp_versions.table
+++ otp_versions.table
@@ -1,3 +1,4 @@
+OTP-19.2.2 : mnesia-4.14.3 # asn1-4.0.4 common_test-1.13 compiler-7.0.3 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7.2 debugger-4.2.1 dialyzer-3.0.3 diameter-1.12.1 edoc-0.8.1 eldap-1.2.2 erl_docgen-0.6.1 erl_interface-3.9.2 erts-8.2.1 et-1.6 eunit-2.3.2 gs-1.6.2 hipe-3.15.3 ic-4.4.2 inets-6.3.4 jinterface-1.7.1 kernel-5.1.1 megaco-3.18.1 observer-2.3 odbc-2.12 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.4 percept-0.9 public_key-1.3 reltool-0.7.2 runtime_tools-1.11 sasl-3.0.2 snmp-5.2.4 ssh-4.4 ssl-8.1 stdlib-3.2 syntax_tools-2.1.1 tools-2.9 typer-0.9.11 wx-1.8 xmerl-1.3.12 :
 OTP-19.2.1 : erts-8.2.1 # asn1-4.0.4 common_test-1.13 compiler-7.0.3 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7.2 debugger-4.2.1 dialyzer-3.0.3 diameter-1.12.1 edoc-0.8.1 eldap-1.2.2 erl_docgen-0.6.1 erl_interface-3.9.2 et-1.6 eunit-2.3.2 gs-1.6.2 hipe-3.15.3 ic-4.4.2 inets-6.3.4 jinterface-1.7.1 kernel-5.1.1 megaco-3.18.1 mnesia-4.14.2 observer-2.3 odbc-2.12 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.4 percept-0.9 public_key-1.3 reltool-0.7.2 runtime_tools-1.11 sasl-3.0.2 snmp-5.2.4 ssh-4.4 ssl-8.1 stdlib-3.2 syntax_tools-2.1.1 tools-2.9 typer-0.9.11 wx-1.8 xmerl-1.3.12 :
 OTP-19.2 : common_test-1.13 compiler-7.0.3 crypto-3.7.2 dialyzer-3.0.3 edoc-0.8.1 erl_docgen-0.6.1 erl_interface-3.9.2 erts-8.2 eunit-2.3.2 hipe-3.15.3 inets-6.3.4 kernel-5.1.1 mnesia-4.14.2 observer-2.3 odbc-2.12 parsetools-2.1.4 public_key-1.3 runtime_tools-1.11 sasl-3.0.2 ssh-4.4 ssl-8.1 stdlib-3.2 syntax_tools-2.1.1 tools-2.9 wx-1.8 # asn1-4.0.4 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 debugger-4.2.1 diameter-1.12.1 eldap-1.2.2 et-1.6 gs-1.6.2 ic-4.4.2 jinterface-1.7.1 megaco-3.18.1 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 percept-0.9 reltool-0.7.2 snmp-5.2.4 typer-0.9.11 xmerl-1.3.12 :
 OTP-19.1.6 : erts-8.1.1 # asn1-4.0.4 common_test-1.12.3 compiler-7.0.2 cosEvent-2.2.1 cosEventDomain-1.2.1 cosFileTransfer-1.2.1 cosNotification-1.2.2 cosProperty-1.2.1 cosTime-1.2.2 cosTransactions-1.3.2 crypto-3.7.1 debugger-4.2.1 dialyzer-3.0.2 diameter-1.12.1 edoc-0.8 eldap-1.2.2 erl_docgen-0.6 erl_interface-3.9.1 et-1.6 eunit-2.3.1 gs-1.6.2 hipe-3.15.2 ic-4.4.2 inets-6.3.3 jinterface-1.7.1 kernel-5.1 megaco-3.18.1 mnesia-4.14.1 observer-2.2.2 odbc-2.11.3 orber-3.8.2 os_mon-2.4.1 otp_mibs-1.1.1 parsetools-2.1.3 percept-0.9 public_key-1.2 reltool-0.7.2 runtime_tools-1.10.1 sasl-3.0.1 snmp-5.2.4 ssh-4.3.6 ssl-8.0.3 stdlib-3.1 syntax_tools-2.1 tools-2.8.6 typer-0.9.11 wx-1.7.1 xmerl-1.3.12 :
