DEF_STANDALONE=YES
DEF_FULL_NAME="PHP 7.4"
DEF_NAME="php"
DEF_VERSION="7.4.33"
DEF_SHA="4d3152b2339332b4eef2c12931931d4a1245fdab"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_ORIGIN="https://www.php.net/distributions/${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_CONFIGURE_ARGS="--disable-all --disable-option-checking --disable-static --disable-debug --disable-cgi \
    --disable-phpdbg --disable-phpdbg-webhelper --disable-phpdbg-debug \
    --enable-ipv6 --enable-mysqlnd --enable-sockets=shared --enable-soap=shared --enable-json=shared --enable-xml \
    --enable-libxml --enable-xmlwriter=shared --enable-xmlreader=shared --enable-simplexml=shared --enable-exif=shared \
    --enable-pcntl=shared --enable-posix=shared --enable-ftp=shared --enable-calendar=shared --enable-bcmath=shared \
    --enable-wddx=shared --enable-tokenizer=shared --enable-session=shared --enable-hash --enable-filter=shared \
    --enable-mbstring=shared --enable-fileinfo=shared --enable-dom=shared --enable-opcache=shared \
    --enable-sysvshm=shared --enable-sysvmsg=shared --enable-sysvsem=shared --enable-shmop=shared --enable-phar \
    --enable-embed=shared --enable-cli --enable-fpm --enable-pdo=shared --enable-gettext=shared --enable-dba=shared \
    --with-pdo-mysql=shared,${PREFIX} --with-pdo-pgsql=shared,${PREFIX} --with-zlib=shared --with-zlib-dir=/usr \
    --with-bz2=shared --with-pic --with-iconv --with-layout=GNU --with-system-tzdata --with-password-argon2=shared,${PREFIX} \
    --with-onig=${PREFIX} --with-libxml --with-libxml-dir=${PREFIX} --with-openssl=shared,${PREFIX} --with-openssl-dir=${PREFIX} \
    --with-mcrypt=shared,${PREFIX} --with-mysqli=mysqlnd --with-pgsql=shared,${PREFIX} --with-curl=shared,${PREFIX} \
    --with-gmp=shared,${PREFIX} --with-pear --with-xmlrpc=shared --enable-ctype=shared --with-mhash=shared,${PREFIX} \
    --with-png-dir=${PREFIX} --with-jpeg-dir=${PREFIX} --with-xsl=shared,${PREFIX} --with-libedit=shared,${PREFIX} \
    --with-pcre-regex=${PREFIX} --without-pcre-jit --enable-gd --enable-gd-native-ttf --with-gd=shared,${PREFIX} --with-icu-dir=${PREFIX} \
    --with-freetype-dir=${PREFIX} --enable-freetype=shared --enable-fontconfig=shared \
    --with-config-file-scan-dir=${SERVICE_DIR}/etc/php --with-sodium=shared,${PREFIX} \
    --enable-intl=shared,${PREFIX} --with-libzip=shared,${PREFIX} \
    ac_cv_sizeof_off_t=8 ac_cv_decimal_fp_supported=no ac_cv_func_RAND_egd=no lt_cv_path_SED=sed"

DEF_REQUIREMENTS="@curl-openssl @libxslt gmp pcre2-jit onig libnet t1lib @gd libmcrypt libsodium mpdecimal icu libedit libuuid postgresql13-client @mysql-lib re2c phc-winner-argon2 libzip"
DEF_BUNDLED_EXTENSIONS="zip decimal apcu xdebug igbinary meminfo redis"
DEF_EXPORTS="php php-fpm php-config pecl pear phpize"
DEF_USELESS="cmake doc docs php/man mysql-test scripts sql-bench support-files data Software man bin/DB lib/{libxslt-plugins,libmcrypt,cmake,pkgconfig,postgresql,icu,perl5,plugin,libheif} lib/php/build COPYING INSTALL-BINARY README include lib/*.{a,la,sh} share/aclocal* share/automake* ssl share/{mysql,pkgconfig,bison,autoconf,libgpg-error,mysql_security_commands.sql,mysql_system_tables_data.sql,mysql_system_tables.sql,mysql_test_data_timezone.sql,nghttp2,norwegian,norwegian-ny,polish,portuguese,postgresql,romanian,russian,serbian,slovak,spanish,swedish,ukrainian,re2c} libdata libexec"
DEF_CONFLICTS_WITH="Php"
DEF_COMPILER_FLAGS="${DEF_COMPILER_FLAGS} -fsigned-char -fno-strict-aliasing -DGD_FLIP_HORINZONTAL=1 -DGD_FLIP_HORIZONTAL=1 -DGD_FLIP_VERTICAL=2 -DGD_FLIP_BOTH=3"

DEF_NO_CCACHE=YES # causes random crashes and other issues
DEF_NO_TRAP_INT_OVERFLOW=YES # causes pecl to overflow on any command ;)
DEF_NO_FAST_MATH=YES
DEF_USE_LTO=YES
DEF_USE_SAFE_STACK=YES

DEF_NO_MPROTECT=YES # JIT enabled
DEF_NO_PAGEEXEC=YES # JIT enabled
DEF_APPLY_LOWER_SECURITY_ON="${DEF_EXPORTS}"

case "${SYSTEM_NAME}" in
    FreeBSD)
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --disable-dtrace --with-config-file-path=${SERVICE_DIR}/etc --with-iconv-dir=/usr --with-fpm-user=www --with-fpm-group=www"
        ;;

    Darwin)
        DEF_REQUIREMENTS="@automake ${DEF_REQUIREMENTS} bzip2 zlib libiconv"
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --disable-fpm --enable-dtrace --with-config-file-path=${SERVICE_DIR}/etc --without-kerberos --without-ldap --with-fpm-user=_www --with-fpm-group=_www --with-bz2=${PREFIX} --with-zlib=shared ZLIB_CFLAGS=-I${PREFIX}/include ZLIB_LIBS=-L${PREFIX}/lib PNG_CFLAGS=I${PREFIX}/include PNG_LIBS=-L${PREFIX}/lib --disable-embed --with-external-gd --with-external-pcre --with-iconv=${PREFIX}"

        # XQuartz support files:
        if [ -d "/opt/X11/lib" ]; then
            DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --with-xpm=/opt/X11"
        else
            error "On Darwin platforms, XQuartz is required!"
        fi

        DEF_COMPILER_FLAGS="${DEF_COMPILER_FLAGS} -w"
        DEF_LINKER_FLAGS="${DEF_LINKER_FLAGS} -lresolv -liconv -lz -lc -lc++ -ldl -lm"
        DEF_MAKE_METHOD="make -j${CPUS:-4} SHELL=${SOFIN_UTILS_DIR}/exports/bash"
        DEF_INSTALL_METHOD="make install SHELL=${SOFIN_UTILS_DIR}/exports/bash"
        unset DEF_USE_LTO
        ;;
esac
DEF_AFTER_UNPACK_METHOD="hack_after_unpack"
hack_after_unpack () {
    try "${TEST_BIN} -f ${HOME}/.pearrc" && \
        try "${RM_BIN} -f ${HOME}/.pearrc"

    # I have no idea wtf is this... hack on hack after hack..
    try "${MV_BIN} -v ext/sqlite3/config0.m4 ext/sqlite3/config.m4"
    try "${MV_BIN} -v ext/openssl/config0.m4 ext/openssl/config.m4"
    try "${MV_BIN} -v ext/zlib/config0.m4 ext/zlib/config.m4"

    try "./buildconf --force --prefix=${PREFIX}"
}

DEF_AFTER_CONFIGURE_METHOD="hack_phpisms"
hack_phpisms () {
    ${SED_BIN} -i '' -e "s#/usr/local#${PREFIX}#g" Makefile configure *.m4 main/build-defs.h main/php_config.h
    if [ "Darwin" != "${SYSTEM_NAME}" ]; then
        ${SED_BIN} -i '' -e "s#HAVE_GD_XPM#NO_I_DONT_YOU_STUPID#g" ext/gd/gd.c
    fi
    return 0
}

# install extensions
DEF_AFTER_INSTALL_METHOD="hack_prefix_hardcode_after_install; install_extensions; strip_extensions"
hack_prefix_hardcode_after_install () {
    try "${PREFIX}/bin/pear channel-update pear.php.net"

    ${SED_BIN} -i '' -e "s#/usr/local#${PREFIX}#g" \
        "${PREFIX}/bin/php-config" \
        "${PREFIX}/bin/pecl" \
        "${PREFIX}/bin/pear" \
        "${PREFIX}/bin/phpize"

    create_default_php_ini
}

install_pear_modules () {
    for mod in Auth Auth_HTTP Auth_SASL Benchmark Cache Cache_Lite Config Date DB DB_DataObject DB_DataObject_FormBuilder File HTML_QuickForm_Controller HTML_Table HTML_Template_Flexy HTML_Template_IT HTML_Template_Sigma HTML_TreeMenu HTTP HTTP_Client HTTP_Download Image_Color Log Mail Mail_Mime Mail_mimeDecode MDB2 MIME_Type Net_DNS Net_FTP Net_IMAP Net_IPv4 Net_IPv6 Net_Ping Net_POP3 Net_SMTP Net_URL2 Net_UserAgent_Detect Numbers_Roman Pager PHP_Compat PhpDocumentor Services_Weather Text_Password XML_Util Structures_Graph PEAR PEAR_Manpages Console_Getopt Archive_Tar XML_Beautifier OLE-beta Spreadsheet_Excel_Writer-beta Crypt_CHAP Numbers_Words-beta File_Passwd;
    do
        try "${PREFIX}/bin/pear install $mod"
    done
    return 0
}


install_zip () {
    zip_name="zip-1.21.1"
    zip_archive="${zip_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O \"${MAIN_SOURCE_REPOSITORY}${zip_archive}\"" && \
    try "${TAR_BIN} xf ${zip_archive}" && \
    cd ${zip_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${zip_name}" && \
    return 0
    return 1
}


install_redis () {
    redis_name="redis-5.3.7"
    redis_archive="${redis_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O \"${MAIN_SOURCE_REPOSITORY}${redis_archive}\"" && \
    try "${TAR_BIN} xf ${redis_archive}" && \
    cd ${redis_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config --with-redis=${PREFIX}" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${redis_name}" && \
    return 0
    return 1
}


install_igbinary () {
    igbinary_name="igbinary-3.2.7"
    igbinary_archive="${igbinary_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O \"${MAIN_SOURCE_REPOSITORY}${igbinary_archive}\"" && \
    try "${TAR_BIN} xf ${igbinary_archive}" && \
    cd ${igbinary_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config --enable-igbinary" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${igbinary_name}" && \
    return 0
    return 1
}


install_decimal () {
    arch_name="decimal-1.4.0"
    decimal_archive="${arch_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O ${MAIN_SOURCE_REPOSITORY}${decimal_archive}" && \
    try "${TAR_BIN} xf ${decimal_archive}" && \
    cd "${arch_name}" && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --enable-decimal --with-libmpdec-path=${PREFIX} --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed Decimal pecl module: ${arch_name}" && \
    return 0
    return 1
}


install_meminfo () {
    phpmeminfo_name="php-meminfo-1.1.1"
    phpmeminfo_archive="${phpmeminfo_name}.tar.gz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O \"${MAIN_SOURCE_REPOSITORY}${phpmeminfo_archive}\"" && \
    try "${TAR_BIN} xf ${phpmeminfo_archive}" && \
    cd "${phpmeminfo_name}/extension/php7" && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${phpmeminfo_name}" && \
    return 0
    return 1
}


install_xdebug () {
    arch_name="xdebug-3.1.4"
    archive="${arch_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O ${MAIN_SOURCE_REPOSITORY}${archive}" && \
    try "${TAR_BIN} xf ${archive}" && \
    cd "${arch_name}" && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --enable-xdebug --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed Xdebug pecl module: ${arch_name}" && \
    return 0
    return 1
}


install_apcu () {
    arch_name="apcu-5.1.21"
    archive="${arch_name}.tgz"
    run "${FETCH_BIN} ${FETCH_OPTS} -O ${MAIN_SOURCE_REPOSITORY}${archive}" && \
    try "${TAR_BIN} xf ${archive}" && \
    cd "${arch_name}" && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --enable-apcu --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed APCu pecl module: ${arch_name}" && \
    return 0
    return 1
}


install_and_move () {
    name="$1"
    try "install_${name}" && \
        return 0
    return 1
}


install_extensions () {
    # update pecl protocols before installing extensions
    PATH=${PREFIX}/bin:$PATH "${PREFIX}/bin/pecl" "channel-update" "pecl.php.net"
    for name in $(to_iter "${DEF_BUNDLED_EXTENSIONS}"); do
        install_and_move "${name}" || error "Failed to install PECL extension: ${name}"
    done
    try "install_pear_modules"
}


strip_extensions () {
    case "${SYSTEM_NAME}" in
        Darwin)
            # on Darwin plugins are Mach-O 64-bit bundle arm64 so can't be stripped
            ;;

        *)
            try "${STRIP_BIN} ${PREFIX}/lib/php/**/*.so"
            ;;
    esac
    return 0
}

create_default_php_ini () {
    if [ ! -f "${SERVICE_DIR}/etc/php.ini" ]; then
        mkdir -p "${SERVICE_DIR}/var/log"
        ${CAT_BIN} > "${SERVICE_DIR}/etc/php.ini" <<EOF
; default extensions:
extension=openssl.so
extension=filter.so
extension=zlib.so
extension=session.so
extension=bcmath.so
extension=calendar.so
extension=ctype.so
extension=curl.so
extension=dba.so
extension=dom.so
extension=exif.so
extension=fileinfo.so
extension=ftp.so
extension=gmp.so
extension=igbinary.so
extension=sodium.so
extension=intl.so
extension=json.so
extension=decimal.so
extension=mbstring.so
extension=pcntl.so
extension=pdo.so
extension=pdo_mysql.so
extension=posix.so
extension=redis.so
extension=shmop.so
extension=simplexml.so
extension=soap.so
extension=sockets.so
extension=sysvmsg.so
extension=sysvsem.so
extension=sysvshm.so
extension=tokenizer.so
extension=xmlreader.so
extension=xmlrpc.so
extension=xmlwriter.so
extension=xsl.so
extension=zip.so
extension=readline.so
zend_extension=opcache.so

[PHP]
engine = On
short_open_tag = On
output_buffering = 16384
zlib.output_compression = On
zlib.output_compression_level = 4
asp_tags = Off
implicit_flush = Off
unserialize_callback_func =
precision = 14
serialize_precision = 17
disable_classes =
realpath_cache_size = 64k
realpath_cache_ttl = 360
disable_functions = pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,
zend.enable_gc = On
memory_limit = 1024M
expose_php = Off
upload_max_filesize = 256M
max_input_nesting_level = 255
max_input_vars = 100000
post_max_size = 256M
max_execution_time = 360
max_input_time = 120
error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
display_errors = Off
display_startup_errors = Off
log_errors = On
log_errors_max_len = 4096
ignore_repeated_errors = Off
ignore_repeated_source = Off
report_memleaks = On
report_zend_debug = 0
track_errors = Off
html_errors = On
variables_order = "GPCS"
error_log = ${SERVICE_DIR}/var/log/php_errors.log
request_order = "GP"
register_argc_argv = Off
auto_globals_jit = On
auto_prepend_file =
auto_append_file =
default_mimetype = "text/html"
default_charset = "UTF-8"
doc_root =
user_dir =
enable_dl = Off
file_uploads = On
max_file_uploads = 20
allow_url_fopen = On
allow_url_include = Off
default_socket_timeout = 360

[Date]
date.timezone = Europe/Warsaw

[CLI Server]
cli_server.color = On

[mail function]
SMTP = localhost
smtp_port = 25
mail.add_x_header = On

[SQL]
sql.safe_mode = Off

[MySQL]
mysql.allow_local_infile = On
mysql.allow_persistent = On
mysql.cache_size = 2000
mysql.max_persistent = -1
mysql.max_links = -1
mysql.default_socket =
mysql.default_host =
mysql.default_user =
mysql.default_password =
mysql.connect_timeout = 120
mysql.trace_mode = Off
mysql.default_port = 3306

[MySQLi]
mysqli.max_persistent = -1
mysqli.allow_persistent = On
mysqli.max_links = -1
mysqli.cache_size = 2000
mysqli.default_port = 3306
mysqli.default_socket =
mysqli.default_host =
mysqli.default_user =
mysqli.default_pw =
mysqli.reconnect = Off

[mysqlnd]
mysqlnd.collect_statistics = Off
mysqlnd.collect_memory_statistics = Off

[PostgreSQL]
pgsql.allow_persistent = On
pgsql.auto_reset_persistent = Off
pgsql.max_persistent = -1
pgsql.max_links = -1
pgsql.ignore_notice = 0
pgsql.log_notice = 0

[bcmath]
bcmath.scale = 0

[Session]
session.save_handler = files
session.save_path = /tmp
session.use_strict_mode = 0
session.use_cookies = 1
session.use_only_cookies = 1
session.name = PHPSESSID
session.auto_start = 0
session.cookie_lifetime = 0
session.cookie_path = /
session.cookie_domain =
session.cookie_httponly =
session.serialize_handler = php
session.gc_probability = 0
session.gc_divisor = 10000
session.gc_maxlifetime = 1209600
session.referer_check =
session.cache_limiter = nocache
session.cache_expire = 180
session.use_trans_sid = 0
session.hash_function = 0
session.hash_bits_per_character = 5
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=fakeentry"

[Tidy]
tidy.clean_output = Off

[soap]
soap.wsdl_cache_enabled = 1
soap.wsdl_cache_dir = "/tmp"
soap.wsdl_cache_ttl = 86400
soap.wsdl_cache_limit = 16

[sysvshm]
; A default size of the shared memory segment
sysvshm.init_mem = 32768

[opcache]
opcache.enable = 1
opcache.enable_cli = 0
; opcache.memory_consumption = 256
; opcache.interned_strings_buffer = 8
; opcache.max_accelerated_files = 8000
; opcache.validate_timestamps = 0
EOF
    fi
    return 0
}
