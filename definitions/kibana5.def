DEF_FULL_NAME="Kibana - Elasticsearch data visualiser and composer."
DEF_STANDALONE=YES
DEF_NAME="kibana"
DEF_VERSION="5.6.16"
DEF_SHA="59c90abe1b456de3b513d022c1716f381d8623ef"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-linux-x86_64.tar.gz"
DEF_ORIGIN="https://artifacts.elastic.co/downloads/${DEF_NAME}/${DEF_NAME}-${DEF_VERSION}-linux-x86_64.tar.gz"
DEF_CONFIGURE_METHOD="binary"
DEF_REQUIREMENTS="bash jemalloc libedit gettext libxml2 libevent c-ares lzo pcre autoconf texinfo automake18 libffi icu yaml nghttp2 libuv openssl node-util"
DEF_EXPORTS="${DEF_NAME} ${DEF_NAME}-plugin ${DEF_NAME}-keystore"
DEF_USEFUL="bin/bash bin/kibana* bin/npm* bin/node*"
DEF_USELESS="node bin/*.dll bin/*.exe bin/*.bat demo sample samples src.zip THIRD_PARTY_* COPYING NOTICE.txt include THIRD_PARTY_README ASSEMBLY_EXCEPTION"

DEF_AFTER_UNPACK_METHOD="install_and_make_writable_service_dirs"
install_and_make_writable_service_dirs () {
    debug "${0}: install_and_make_writable_service_dirs(): Running initial service dir preparation"
    mkdir -p "${SERVICE_DIR}/config" "${SERVICE_DIR}/plugins" "${SERVICE_DIR}/data" "${SERVICE_DIR}/logs" "${SERVICE_DIR}/optimize"
    if [ ! -L "${PREFIX}/data" ]; then
        try "${LN_BIN} -fs '${SERVICE_DIR}/data' '${PREFIX}/data'"
    fi
    if [ ! -L "${PREFIX}/config" ]; then
        try "${LN_BIN} -fs '${SERVICE_DIR}/config' '${PREFIX}/config'"
    fi
    if [ ! -L "${PREFIX}/plugins" ]; then
        try "${LN_BIN} -fs '${SERVICE_DIR}/plugins' '${PREFIX}/plugins'"
    fi
    if [ ! -L "${PREFIX}/logs" ]; then
        try "${LN_BIN} -fs '${SERVICE_DIR}/logs' '${PREFIX}/logs'"
    fi
    if [ ! -L "${PREFIX}/optimize" ]; then
        try "${LN_BIN} -fs '${SERVICE_DIR}/optimize' '${PREFIX}/optimize'"
    fi

    debug "Installing Kibana5â€¦"
    ${CP_BIN} -fR "${BUILD_DIR}/${DEF_NAME}-${DEF_VERSION}-linux-x86_64/" "${PREFIX}"
}

DEF_AFTER_INSTALL_METHOD="use_local_node"
use_local_node () {
    ${SED_BIN} -i '' -e \
        "s#/node/bin/node#/bin/node#;" \
                "${PREFIX}/bin/${DEF_NAME}" \
                "${PREFIX}/bin/${DEF_NAME}-plugin"
}

DEF_NO_MPROTECT=YES
DEF_NO_PAGEEXEC=YES
DEF_APPLY_LOWER_SECURITY_ON="node"

unset DEF_USE_RAMDISK
