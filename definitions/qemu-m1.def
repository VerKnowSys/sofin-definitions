DEF_DISABLE_ON="FreeBSD Linux"
DEF_FULL_NAME="QEMU is a generic and open source machine emulator and virtualizer. Build for all supported architectures."
DEF_NAME="qemu"
DEF_VERSION="6.1.0"
DEF_SHA="f97debb9c3b03bf6b03add6d0beb5700a044495e"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-m1-${DEF_VERSION}.tar.xz"
DEF_REQUIREMENTS="libtool @glib @curl-openssl capstone libusb libslirp libssh expat libzip lzop lz4 db sqlite libpcap libgpg-error pixman @gnutls userspace-rcu mpfr libmpc isl012 vde2 vdetelweb zlib bash snappy"
DEF_CONFIGURE_ARGS="--enable-gnutls --enable-nettle --enable-curl --enable-vnc --enable-libssh --enable-cocoa --enable-slirp --enable-capstone --enable-zstd --disable-werror --disable-docs --disable-gtk --disable-xen --disable-xen-pci-passthrough --extra-cflags=-DNCURSES_WIDECHAR=1 --disable-sdl"
DEF_CONFIGURE_METHOD="/bin/bash ./configure"
DEF_USEFUL="bin/qemu*"
DEF_USELESS="cmake share/gtk* share/ac* share/auto* share/{gettext-0.20,glib-2.0,bison,readline,libgpg-error,p11-kit,nghttp2,locale} share/read* include lib/*.a lib/*.sh lib/{glib-2.0,cmake,pkgconfig,gio,gettext,pkcs11,X11} share/{emacs,gdb,common-lisp,bash-completion} man libexec sbin docs"

_sys_bins="qemu-system-alpha qemu-system-mips64 qemu-system-rx qemu-system-avr qemu-system-mips64el qemu-system-s390x qemu-system-cris qemu-system-mipsel qemu-system-sh4 qemu-system-hppa qemu-system-nios2 qemu-system-sh4eb qemu-system-i386 qemu-system-aarch64 qemu-system-arm qemu-system-x86_64 qemu-system-or1k qemu-system-sparc qemu-system-m68k qemu-system-ppc qemu-system-sparc64 qemu-system-microblaze qemu-system-ppc64 qemu-system-tricore qemu-system-microblazeel qemu-system-riscv32 qemu-system-xtensa qemu-system-mips qemu-system-riscv64 qemu-system-xtensaeb"
DEF_EXPORTS="qemu-edid qemu-img qemu-nbd qemu-io qemu-storage-daemon ${_sys_bins}"
DEF_USE_SAFE_STACK=YES

DEF_AFTER_INSTALL_METHOD="set_rpath_and_rename_binaries"
set_rpath_and_rename_binaries () {
    for _bin in ${PREFIX}/bin/qemu*; do
        try "install_name_tool -add_rpath ${PREFIX}/lib ${_bin}"
    done
    for _bin in $(to_iter "${_sys_bins}"); do
        run "${MV_BIN} -vf ${PREFIX}/bin/${_bin}-unsigned ${PREFIX}/bin/${_bin}"
    done
    return 0
}

DEF_TEST_METHOD="test_qemu_system_exports" # sign_the_code &&
test_qemu_system_exports () {
    for _bin in ${PREFIX}/bin/qemu-system-*; do
        "${_bin}" --version | ${GREP_BIN} -F "QEMU emulator version ${DEF_VERSION}" || return 1
    done
    ${PREFIX}/bin/qemu-img --version | ${GREP_BIN} -F "qemu-img version ${DEF_VERSION}" && \
    ${PREFIX}/bin/qemu-io --version | ${GREP_BIN} -F "qemu-io version ${DEF_VERSION}" && \
    ${PREFIX}/bin/qemu-storage-daemon --version | ${GREP_BIN} -F "qemu-storage-daemon version ${DEF_VERSION}" && \
    ${PREFIX}/bin/qemu-nbd --version | ${GREP_BIN} -F "qemu-nbd ${DEF_VERSION}" && \
        return 0
    return 1
}

DEF_AFTER_EXPORT_METHOD="sign_the_code"
sign_the_code () {
    note "Setting entitlements to allow Qemu to run HVF accelerationâ€¦"
    cat > /tmp/entitlements.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>com.apple.security.hypervisor</key>
    <true/>
</dict>
</plist>
EOF
    for _bin in ${PREFIX}/bin/qemu-system-*; do
        try "codesign -s - --entitlements /tmp/entitlements.xml --force ${_bin}"
    done
    ${RM_BIN} -f /tmp/entitlements.xml
    return 0
}
