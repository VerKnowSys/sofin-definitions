DEF_FULL_NAME="Rust + Cargo + Utilities"
DEF_NAME="rust"
DEF_VERSION="1.21.0"
DEF_CONFIGURE_METHOD="binary"
DEF_CLEAN_USELESS=NO
DEF_EXPORTS="rustc cargo cargo.bin cargo-count cargo-do cargo-check cargo-modules cargo-watch cargo-fmt rustfmt racer rls rust-gdb rust-lldb rustdoc"

case "${SYSTEM_NAME}" in
    Darwin)
        DEF_SHA="a605caf3f2f15259291fcc101c964d17b2f2d426"
        DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-x86_64-apple-darwin.tar.gz"
        ;;

    FreeBSD)
        DEF_SHA="f70e1900928c3608938fb014e282d7257b10fcdf"
        DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-x86_64-unknown-freebsd.tar.gz"
        ;;
esac

DEF_AFTER_UNPACK_METHOD="patch_prefix_and_install"
patch_prefix_and_install () {
    ${SED_BIN} -i '' -e "s|/usr/local|${PREFIX}|g" install.sh
    note "Installing Rust v${DEF_VERSION}"
    run "./install.sh"
}


DEF_AFTER_MAKE_METHOD="create_cargo_bin_wrapper; install_utils"
create_cargo_bin_wrapper () {
    try "${MV_BIN} -f \"${PREFIX}/bin/cargo\" \"${PREFIX}/bin/cargo.bin\"" \
        && ${PRINTF_BIN} "#!/usr/bin/env sh \\
# \\
# Cargo - Rust Package Manager. \\
# This is a wrapper for: ${PREFIX}/exports/${DEF_NAME}.bin - that lacks RPATH data in ELF header \\
# Author: @dmilith
# \\
CC=cc \\\\
CPP=cpp \\\\
CXX=c++ \\\\
CFLAGS=\\\"${DEF_COMPILER_FLAGS}\\\" \\\\
CXXFLAGS=\\\"${DEF_COMPILER_FLAGS}\\\" \\\\
LDFLAGS=\\\"${DEF_LINKER_FLAGS}\\\" \\\\
RUST_BACKTRACE=\\\"\${RUST_BACKTRACE:-1}\\\" \\\\
RUSTFLAGS=\\\"\${RUSTFLAGS:-\\\"${DEFAULT_RUSTFLAGS}\\\"}\\\" \\\\
CARGO_BUILD_JOBS=\\\"\${CARGO_BUILD_JOBS:-\\\"${CPUS}\\\"}\\\" \\\\
CARGO_INSTALL_ROOT=\\\"\${CARGO_INSTALL_ROOT:-\\\"${SERVICE_DIR}\\\"}\\\" \\\\
${PREFIX}/bin/cargo.bin \${@} \\
" > "${PREFIX}/bin/cargo" \
    && try "${CHMOD_BIN} -v 755 \"${PREFIX}/bin/cargo\""
}

install_utils () {
    note "Installing: $(distn "racer, cargo-watch, cargo-do, rustfmt, cargo-count")"
    for _add in racer cargo-watch cargo-do rustfmt cargo-count; do
        PATH="${PREFIX}/bin:/bin:/usr/bin" cargo install "${_add}"
    done
}
