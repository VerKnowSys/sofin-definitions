DEF_FULL_NAME="PHP 5.6.x (legacy-version)"
DEF_SHA="0403ae06273fe8c1acdbd45b181a8a53f4b0b4d7"
DEF_NAME="php"
DEF_VERSION="5.6.40"
DEF_SUFFIX="56"
DEF_CONFLICTS_WITH="Php"
DEF_STANDALONE=YES
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.xz"
DEF_CONFIGURE_ARGS="--disable-all --disable-option-checking --disable-static --disable-debug --disable-cgi --disable-phpdbg --disable-phpdbg-webhelper --disable-phpdbg-debug --enable-ipv6 --enable-zip=shared --enable-mysqlnd --enable-sockets=shared --enable-soap=shared --enable-json=shared --enable-xml --enable-xmlwriter=shared --enable-xmlreader=shared --enable-libxml=shared --enable-simplexml=shared --enable-exif=shared --enable-pcntl=shared --enable-posix=shared --enable-ftp=shared --enable-calendar=shared --enable-bcmath=shared --enable-wddx=shared --enable-tokenizer=shared --enable-session=shared --enable-hash --enable-filter=shared --enable-mbstring=shared --enable-fileinfo=shared --enable-dom=shared --enable-gd-native-ttf --enable-opcache=shared --enable-sysvshm=shared --enable-sysvmsg=shared --enable-sysvsem=shared --enable-shmop=shared --enable-phar --enable-embed=shared --enable-cli --enable-fpm --enable-pdo=shared --enable-gettext=shared --enable-dba=shared --with-pdo-mysql=shared,${PREFIX} --with-pdo-pgsql=shared,${PREFIX} --with-zlib --with-zlib-dir=/usr --with-bz2 --with-pic --with-iconv --with-layout=GNU --with-system-tzdata --with-password-argon2=shared,${PREFIX} --with-onig=${PREFIX} --with-libxml-dir=${PREFIX} --with-openssl=${PREFIX} --with-openssl-dir=${PREFIX} --with-mcrypt=shared,${PREFIX} --with-mysqli=mysqlnd --with-pgsql=shared,${PREFIX} --with-curl=shared,${PREFIX} --with-gmp=shared,${PREFIX} --with-pear --with-xmlrpc=shared --enable-ctype=shared --with-mhash=shared,${PREFIX} --with-png-dir=${PREFIX} --with-jpeg-dir=${PREFIX} --with-xsl=shared,${PREFIX} --with-libedit=${PREFIX} --with-pcre-regex=${PREFIX} --with-gd=shared,${PREFIX} --with-icu-dir=${PREFIX} --with-freetype-dir=${PREFIX} --enable-freetype=shared --enable-fontconfig=shared --with-config-file-scan-dir=${SERVICE_DIR}/etc/php ac_cv_sizeof_off_t=8 ac_cv_decimal_fp_supported=no ac_cv_func_RAND_egd=no lt_cv_path_SED=sed"
DEF_REQUIREMENTS="pkgconf geoip m4 perl-static autoconf jemalloc libedit texinfo automake114 libmemcached libffi libxml2 gmp zip lzo pcre-jit pcre2-jit onig icu libevent libressl nasm libnet libgpg-error libxslt bison27 flex libuuid postgresql10 python27-static tiff libpng jbig2dec jbigkit libjpeg-turbo jpeg freetype fontconfig libmcrypt libunistring libidn2 nghttp2 libssh2 curl mysql-lib t1lib gd re2c phc-winner-argon2"
# REQUIREMENTS disabled recently: libidn, graphite2, jasper, libtool automake18 imagick libpaper lcms2, bash
DEF_INSTALL_METHOD="make -s install"
DEF_BUNDLED_EXTENSIONS="xdebug geoip redis igbinary"
DEF_EXPORTS="php php-fpm php-config pecl pear phpize"
DEF_USELESS="doc docs php/man mysql-test scripts sql-bench support-files data Software man bin/DB share/man lib/libxslt-plugins lib/libmcrypt lib/cmake share/bison share/autoconf COPYING INSTALL-BINARY README include lib/*.{a,la,sh} share/aclocal* share/automake* lib/pkgconfig share/t1lib lib/php/build ssl lib/postgresql/pgxs/src"

unset DEF_USE_LTO
DEF_USE_SAFE_STACK=YES
DEF_NO_CCACHE=YES # causes random crashes and other issues
DEF_NO_TRAP_INT_OVERFLOW=YES # causes pecl to overflow on any command ;)
DEF_COMPILER_FLAGS="${DEF_COMPILER_FLAGS} -fsigned-char -fno-strict-aliasing"
DEF_NO_FAST_MATH=YES

case "${SYSTEM_NAME}" in
    FreeBSD)
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --disable-dtrace --with-config-file-path=${SERVICE_DIR}/etc --with-iconv-dir=/usr --with-fpm-user=www --with-fpm-group=www"
        DEF_MAKE_METHOD="make -j${CPUS}"
        ;;

    Darwin)
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --enable-dtrace --with-config-file-path=${SERVICE_DIR}/etc --with-iconv-dir=/usr --with-kerberos=/usr --without-ldap --with-fpm-user=_www --with-fpm-group=_www"
        DEF_MAKE_METHOD="make -j${CPUS}"
        ;;
esac
DEF_AFTER_UNPACK_METHOD="hack_after_unpack"
hack_after_unpack () {
    try "${TEST_BIN} -f ${HOME}/.pearrc" && \
        try "${MV_BIN} -vf ${HOME}/.pearrc ${HOME}/.pearrc.old.${TIMESTAMP}"

    # I have no idea wtf is this... hack on hack after hack..
    try "${MV_BIN} -v ext/sqlite3/config0.m4 ext/sqlite3/config.m4"
    try "${MV_BIN} -v ext/openssl/config0.m4 ext/openssl/config.m4"
    try "${MV_BIN} -v ext/zlib/config0.m4 ext/zlib/config.m4"

    try "./buildconf --force --prefix=${PREFIX}"
}

DEF_AFTER_CONFIGURE_METHOD="hack_phpisms"
hack_phpisms () {
    ${SED_BIN} -i '' -e "s#/usr/local#${PREFIX}#g" Makefile configure *.m4 main/build-defs.h main/php_config.h
    ${SED_BIN} -i '' -e "s#HAVE_GD_XPM#NO_I_DONT_YOU_STUPID#g" ext/gd/gd.c
    return 0
}

# install extensions
DEF_AFTER_INSTALL_METHOD="hack_prefix_hardcode_after_install; install_extensions"
hack_prefix_hardcode_after_install () {
    ${SED_BIN} -i '' -e "s#/usr/local#${PREFIX}#g" \
        "${PREFIX}/bin/php-config" \
        "${PREFIX}/bin/pecl" \
        "${PREFIX}/bin/pear" \
        "${PREFIX}/bin/phpize"
}

install_memcached () {
    try "${GIT_BIN} clone https://github.com/php-memcached-dev/php-memcached.git"
    cd php-memcached
    try "${PREFIX}/bin/phpize"
    try "./configure --prefix=${PREFIX} --disable-memcached-sasl --with-php-config=${PREFIX}/bin/php-config"
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${geoip_name}" && \
    return 0
    return 1
}

install_geoip () {
    geoip_name="geoip-1.0.8"
    geoip_archive="${geoip_name}.tgz"
    try "${FETCH_BIN} \"${MAIN_SOURCE_REPOSITORY}${geoip_archive}\" ${FETCH_OPTS}" && \
    try "${TAR_BIN} xf ${geoip_archive}" && \
    cd ${geoip_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config --with-geoip=${PREFIX}" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${geoip_name}" && \
    return 0
    return 1
}

# install_imagick () {
#     arch_name="imagick-3.4.3"
#     archive="${arch_name}.tgz"
#     try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${archive} ${FETCH_OPTS}" && \
#     try "${TAR_BIN} xf ${archive}" && \
#     cd "${arch_name}" && \
#     try "${PREFIX}/bin/phpize" && \
#     try "./configure --prefix=${PREFIX} --with-imagick=${PREFIX}" && \
#     try "PATH=${PREFIX}/bin:$PATH make install" && \
#     note "Installed IMagick pecl module" && \
#     return 0
#     return 1
# }

# install_rar () {
#     arch_name="rar-4.0.0"
#     archive="${arch_name}.tgz"
#     try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${archive} ${FETCH_OPTS}" && \
#     try "${TAR_BIN} xf ${archive}" && \
#     cd "${arch_name}" && \
#     try "${PREFIX}/bin/phpize" && \
#     try "./configure --prefix=${PREFIX} --enable-rar --with-php-config=${PREFIX}/bin/php-config CFLAGS=\"-I${PREFIX}/include\"" && \
#     try "CFLAGS=\"-I${PREFIX}/include\" PATH=${PREFIX}/bin:$PATH make install" && \
#     note "Installed Rar pecl module: ${arch_name}" && \
#     return 0
#     return 1
# }

install_pear_modules () {
    for mod in Auth Auth_HTTP Auth_SASL Benchmark Cache Cache_Lite Config Date DB DB_DataObject DB_DataObject_FormBuilder File HTML_QuickForm_Controller HTML_Table HTML_Template_Flexy HTML_Template_IT HTML_Template_Sigma HTML_TreeMenu HTTP HTTP_Client HTTP_Download Image_Color Log Mail Mail_Mime Mail_mimeDecode MDB2 MIME_Type Net_DNS Net_FTP Net_IMAP Net_IPv4 Net_IPv6 Net_Ping Net_POP3 Net_SMTP Net_URL2 Net_UserAgent_Detect Numbers_Roman Pager PHP_Compat PhpDocumentor Services_Weather Text_Password XML_Util Structures_Graph PEAR PEAR_Manpages Console_Getopt Archive_Tar XML_Beautifier OLE-beta Spreadsheet_Excel_Writer-beta Crypt_CHAP Numbers_Words-beta File_Passwd;
    do
        try "${PREFIX}/bin/pear install $mod"
    done
    return 0
}


install_xdebug () {
    arch_name="xdebug-2.5.5"
    archive="${arch_name}.tgz"
    try "${FETCH_BIN} ${MAIN_SOURCE_REPOSITORY}${archive} ${FETCH_OPTS}" && \
    try "${TAR_BIN} xf ${archive}" && \
    cd "${arch_name}" && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --enable-xdebug --with-php-config=${PREFIX}/bin/php-config" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed Xdebug pecl module: ${arch_name}" && \
    return 0
    return 1
}


install_redis () {
    redis_name="redis-5.0.2"
    redis_archive="${redis_name}.tgz"
    try "${FETCH_BIN} \"${MAIN_SOURCE_REPOSITORY}${redis_archive}\" ${FETCH_OPTS}" && \
    try "${TAR_BIN} xf ${redis_archive}" && \
    cd ${redis_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config --with-redis=${PREFIX}" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${redis_name}" && \
    return 0
    return 1
}


install_igbinary () {
    igbinary_name="igbinary-3.0.1"
    igbinary_archive="${igbinary_name}.tgz"
    try "${FETCH_BIN} \"${MAIN_SOURCE_REPOSITORY}${igbinary_archive}\" ${FETCH_OPTS}" && \
    try "${TAR_BIN} xf ${igbinary_archive}" && \
    cd ${igbinary_name} && \
    try "${PREFIX}/bin/phpize" && \
    try "./configure --prefix=${PREFIX} --with-php-config=${PREFIX}/bin/php-config --enable-igbinary" && \
    try "PATH=${PREFIX}/bin:$PATH make install" && \
    note "Installed PECL extension: ${igbinary_name}" && \
    return 0
    return 1
}


install_and_move () {
    name="$1"
    try "install_${name}" && \
        return 0
    return 1
}


install_extensions () {
    # update pecl protocols before installing extensions
    PATH=${PREFIX}/bin:$PATH "${PREFIX}/bin/pecl" "channel-update" "pecl.php.net"
    for name in $(echo "${DEF_BUNDLED_EXTENSIONS}" | ${TR_BIN} ' ' '\n' 2>/dev/null); do
        install_and_move "${name}" || error "Failed to install PECL extension: ${name}"
    done
    try "install_pear_modules"
}
