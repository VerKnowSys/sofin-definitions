DEF_FULL_NAME="Rustc - Rust-lang compiler"
DEF_SHA="00decaac673be3daa672bf8452b44f2de40a7c95"
DEF_NAME="rustc"
DEF_VERSION="1.10.0"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-src.tar.gz"
DEF_REQUIREMENTS="pkgconf make ccache jemalloc readline-dynamic m4 libtool gettext zlib bzip2 lzma xz pcre cmake perl texinfo libidn gmp libxml2 libxslt gdbm db sqlite flex bison unixodbc libressl yaml libgpg-error libgcrypt libssh2 curl autoconf automake llnextgen python27 git"
DEF_CONFIGURE_ARGS="--disable-rustbuild --enable-clang --enable-orbit --enable-jemalloc --release-channel=stable --enable-optimize --enable-optimize-cxx --disable-valgrind --disable-valgrind-rpass --datadir=${PREFIX}/share --infodir=${PREFIX}/share/info --enable-manage-submodules --enable-optimize-llvm --disable-docs --default-linker=clang++"
DEF_NO_CCACHE=YES # it's used internally anyway, but controlled by Rust build system
DEF_MAKE_METHOD="VERBOSE=0 make"
DEF_INSTALL_METHOD="VERBOSE=0 make install"
DEF_USEFUL="rust*"
DEF_EXPORTS="rustc rustdoc rust-lldb rust-gdb"
DEF_USABLE="bin/rust*"
DEF_EXPORTS="rustc rust-gdb rust-lldb rustdoc cargo cargo.bin"
DEF_USELESS="docs doc man include/python* lib/python* share/au* share/bison share/ac* share/info share/*doc share/man share/cmake* include/perl* lib/*perl* share/common-lisp share/emacs share/examples share/git-core"
DEF_CONFLICTS_WITH="Rustc"

DEF_AFTER_PATCH_METHOD="set_localbase"
set_localbase () {
    ${SED_BIN} -i '' -e "s|%%LOCALBASE%%|${PREFIX}|" mk/main.mk || true
}

if [ "Darwin" = "${SYSTEM_NAME}" ]; then
    DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --disable-rpath"
    DEF_INSTALL_METHOD="VERBOSE=1 make install ; install_manually"
    install_manually () {
        try "${CP_BIN} -rv tmp/dist/${DEF_NAME}-${DEF_VERSION}-${SYSTEM_ARCH}-apple-$(lowercase "${SYSTEM_NAME}")/${DEF_NAME}/ ${PREFIX}"
    }
else # for non Darwin, use python from PREFIX:
    DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --python=${PREFIX}/bin/python --enable-rpath"
fi
