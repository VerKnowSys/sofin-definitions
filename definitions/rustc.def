DEF_FULL_NAME="Rustc - Rust-lang compiler"
DEF_SHA="d4c7177fd939be64c08b6460d89a1595b24406b4"
DEF_NAME="rustc"
DEF_VERSION="1.11.0"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}-src.tar.gz"
DEF_REQUIREMENTS="pkgconf make ccache jemalloc m4 libtool gettext zlib bzip2 lzma xz pcre cmake perl texinfo libidn gmp libxml2 libxslt gdbm db sqlite flex bison unixodbc libressl yaml libgpg-error libgcrypt libssh2 curl autoconf automake llnextgen python27 git"
DEF_CONFIGURE_ARGS="--enable-clang --enable-orbit --enable-jemalloc --release-channel=stable --enable-optimize --enable-optimize-cxx --disable-valgrind --disable-valgrind-rpass --datadir=${PREFIX}/share --infodir=${PREFIX}/share/info --enable-manage-submodules --enable-optimize-llvm --disable-docs --default-linker=clang++ "
DEF_NO_CCACHE=YES # it's used internally anyway, but controlled by Rust build system
DEFAULT_RUSTFLAGS="-Ccodegen-units=${CPUS} -Cinline-threshold=275 -Clink-args=-fuse-ld=gold"
DEF_MAKE_METHOD="make_method"
make_method () {
    RUSTFLAGS="-Cdebuginfo=0 ${DEFAULT_RUSTFLAGS}" NO_REBUILD=1 TIME_LLVM_PASSES=0 VERBOSE=1 make all rustc-stage3 install || install_stage3_manually
}
DEF_INSTALL_METHOD="true"
DEF_USEFUL="bin/rust* bin/*conf* bin/*.*sh bin/*cfg bin/*make bin/gettext* bin/libtool* bin/llvm* bin/*cache"
DEF_EXPORTS="rustc rustdoc rust-lldb rust-gdb"
DEF_USELESS="docs doc man include/python* lib/python* share/au* share/bison share/ac* share/info share/*doc include/perl* lib/*perl* share/common-lisp share/emacs share/examples share/git-core share/texinfo share/libxslt-plugins etc"
DEF_CONFLICTS_WITH="Rustc"

DEF_AFTER_PATCH_METHOD="set_localbase"
set_localbase () {
    ${SED_BIN} -i '' -e "s|%%LOCALBASE%%|${PREFIX}|" mk/main.mk || true
}

if [ "Darwin" = "${SYSTEM_NAME}" ]; then
    DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --disable-rpath --enable-rustbuild"
    DEF_MAKE_METHOD="make_method"
else # for non Darwin, use python from PREFIX:
    DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --python=${PREFIX}/bin/python --enable-rpath --disable-rustbuild"
fi
install_stage3_manually () {
    try "${CP_BIN} -rv ${SYSTEM_ARCH}-apple-$(lowercase "${SYSTEM_NAME}")/stage3/bin/ ${PREFIX}/bin/"
    try "${CP_BIN} -rv ${SYSTEM_ARCH}-apple-$(lowercase "${SYSTEM_NAME}")/stage3/lib/ ${PREFIX}/lib/"
    try "${MKDIR_BIN} -p ${PREFIX}/test"
    try "${RM_BIN} -f ${PREFIX}/lib/stamp.*"
}
