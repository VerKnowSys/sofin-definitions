DEF_FULL_NAME="PostgreSQL 9.x"
DEF_STANDALONE=YES
DEF_NAME="postgresql"
DEF_VERSION="9.6.10"
DEF_SHA="860ff3e2ce42246f45db1fc4519f972228168242"
DEF_ORIGIN="https://www.postgresql.org/ftp/source/"
DEF_SOURCE_PATH="${MAIN_SOURCE_REPOSITORY}${DEF_NAME}-${DEF_VERSION}.tar.bz2"
DEF_CONFIGURE_ARGS="--without-ldap --with-zlib --with-libedit-preferred --disable-debug --disable-nls --without-perl --without-python --without-libxml --with-openssl --disable-thread-safety --with-includes=${PREFIX}/include --with-libraries=${PREFIX}/lib --with-uuid=e2fs"
DEF_REQUIREMENTS="pkgconf make libedit libressl libuuid"
DEF_AFTER_INSTALL_METHOD="build_addons_and_extensions"
DEF_EXPORTS="postgres pg_ctl initdb pg_dump pg_dumpall pg_config psql createdb createuser dropdb pg_controldata pg_restore pg_resetxlog pg_archivecleanup pg_basebackup pg_isready pg_receivexlog pg_recvlogical pg_resetxlog postmaster reindexdb vacuumdb createlang droplang dropuser ecpg clusterdb"
DEF_CONFLICTS_WITH="Postgresql"
DEF_STRIP=BIN
DEF_USE_SAFE_STACK=YES
DEF_NO_FAST_MATH=YES
DEF_NO_TRAP_INT_OVERFLOW=YES
DEF_NO_SSP_BUFFER_OVERRIDE=YES
DEF_NO_FORTIFY_SOURCE=YES

case "${SYSTEM_NAME}" in
    Linux)
        DEF_NO_GOLDEN_LINKER=YES
        ;;

    Darwin)
        # Do not strip binaries on OS X, due to:
        # PG::UndefinedFile: ERROR:  could not load library "/Software/Postgresql92/lib/postgresql/hstore.so": dlopen(/Software/Postgresql92/lib/postgresql/hstore.so, 10): Symbol not found: _CurrentMemoryContext
        DEF_STRIP=NO
        CFLAGS="-O3 -funroll-loops"
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --enable-dtrace DTRACEFLAGS='-64'"
        # NOTE: postgresql has to be built BEFORE unixodbc (id present on DEF_REQUIREMENTS list)
        ;;

    FreeBSD)
        # ...
        # <RhodiumToad> anyway, the main issue I know of is that freebsd's threading libs mess up the concept of RLIMIT_STACK for the initial thread of the process that breaks pg's stack limit checking, meaning that you can crash the backend in situations that ought to just produce an error message
        # <RhodiumToad> --enable-thread-safety only affects libpq, yes
        # <RhodiumToad> the problem is that dblink and postgres_fdw end up dynamically linking libpq into the backend

        CFLAGS="-Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -Wno-unused-command-line-argument -fstack-protector -Wformat -Wformat-security -O2 -fPIE -Wl,-z,relro,-z,now -I${PREFIX}/include -fPIC -w -DHAVE_LIBRESSL -Wl,-rpath=${PREFIX}/lib,--enable-new-dtags -funroll-loops"
        LDFLAGS="-pie -z relro -z now -L${PREFIX}/lib -fPIC -Wl,-rpath=${PREFIX}/lib,--enable-new-dtags  -L/usr/lib -lelf -ldtrace -Wl,--as-needed"
        DEF_CONFIGURE_ARGS="${DEF_CONFIGURE_ARGS} --enable-dtrace DTRACEFLAGS='-64'"

        # NOTE: it's required for initdb to pass as regular user on hardened system:
        #   sysctl security.bsd.hardlink_check_uid=0
        #   sysctl security.bsd.hardlink_check_gid=0
        ;;

esac


build_addons_and_extensions () {
    base_dir="${BUILD_DIR}/${DEF_NAME}-${DEF_VERSION}/contrib"
    try "cd ${base_dir}/pg_archivecleanup && make install"
    run "cd ${base_dir}/hstore && make install"
    run "cd ${base_dir}/pg_trgm && make install"
    run "cd ${base_dir}/pgcrypto && make install"
    run "cd ${base_dir}/uuid-ossp && make install"
}
